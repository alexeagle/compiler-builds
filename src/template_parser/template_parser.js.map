{"version":3,"file":"template_parser.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/template_parser/template_parser.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, OpaqueToken, Optional, SchemaMetadata} from '@angular/core/index';\nimport {CompileDirectiveMetadata, CompileDirectiveSummary, CompilePipeSummary, CompileTemplateSummary, CompileTokenMetadata, CompileTypeMetadata, identifierName} from '../compile_metadata';\nimport {Parser} from '../expression_parser/parser';\nimport {isPresent} from '../facade/lang';\nimport {I18NHtmlParser} from '../i18n/i18n_html_parser';\nimport {Identifiers, createIdentifierToken, identifierToken} from '../identifiers';\nimport {CompilerInjectable} from '../injectable';\nimport * as html from '../ml_parser/ast';\nimport {ParseTreeResult} from '../ml_parser/html_parser';\nimport {expandNodes} from '../ml_parser/icu_ast_expander';\nimport {InterpolationConfig} from '../ml_parser/interpolation_config';\nimport {splitNsName} from '../ml_parser/tags';\nimport {ParseError, ParseErrorLevel, ParseSourceSpan} from '../parse_util';\nimport {Console} from '../private_import_core';\nimport {ProviderElementContext, ProviderViewContext} from '../provider_analyzer';\nimport {ElementSchemaRegistry} from '../schema/element_schema_registry';\nimport {CssSelector, SelectorMatcher} from '../selector';\nimport {isStyleUrlResolvable} from '../style_url_resolver';\nimport {SyntaxError} from '../util';\nimport {BindingParser, BoundProperty} from './binding_parser';\nimport {AttrAst, BoundDirectivePropertyAst, BoundElementPropertyAst, BoundEventAst, BoundTextAst, DirectiveAst, ElementAst, EmbeddedTemplateAst, NgContentAst, PropertyBindingType, ReferenceAst, TemplateAst, TemplateAstVisitor, TextAst, VariableAst, templateVisitAll} from './template_ast';\nimport {PreparsedElementType, preparseElement} from './template_preparser';\n\n// Group 1 = \"bind-\"\n// Group 2 = \"let-\"\n// Group 3 = \"ref-/#\"\n// Group 4 = \"on-\"\n// Group 5 = \"bindon-\"\n// Group 6 = \"@\"\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\n// Group 8 = identifier inside [()]\n// Group 9 = identifier inside []\n// Group 10 = identifier inside ()\nconst /** @type {?} */ BIND_NAME_REGEXP =\n    /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n\nconst /** @type {?} */ KW_BIND_IDX = 1;\nconst /** @type {?} */ KW_LET_IDX = 2;\nconst /** @type {?} */ KW_REF_IDX = 3;\nconst /** @type {?} */ KW_ON_IDX = 4;\nconst /** @type {?} */ KW_BINDON_IDX = 5;\nconst /** @type {?} */ KW_AT_IDX = 6;\nconst /** @type {?} */ IDENT_KW_IDX = 7;\nconst /** @type {?} */ IDENT_BANANA_BOX_IDX = 8;\nconst /** @type {?} */ IDENT_PROPERTY_IDX = 9;\nconst /** @type {?} */ IDENT_EVENT_IDX = 10;\n\nconst /** @type {?} */ TEMPLATE_ELEMENT = 'template';\nconst /** @type {?} */ TEMPLATE_ATTR = 'template';\nconst /** @type {?} */ TEMPLATE_ATTR_PREFIX = '*';\nconst /** @type {?} */ CLASS_ATTR = 'class';\n\nconst /** @type {?} */ TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\n\n/**\n * Provides an array of {@link TemplateAstVisitor}s which will be used to transform\n * parsed templates before compilation is invoked, allowing custom expression syntax\n * and other advanced transformations.\n *\n * This is currently an internal-only feature and not meant for general use.\n */\nexport const /** @type {?} */ TEMPLATE_TRANSFORMS = new OpaqueToken('TemplateTransforms');\nexport class TemplateParseError extends ParseError {\n/**\n * @param {?} message\n * @param {?} span\n * @param {?} level\n */\nconstructor(message: string, span: ParseSourceSpan, level: ParseErrorLevel) {\n    super(span, message, level);\n  }\n}\nexport class TemplateParseResult {\n/**\n * @param {?=} templateAst\n * @param {?=} errors\n */\nconstructor(public templateAst?: TemplateAst[],\npublic errors?: ParseError[]) {}\n}\n\nfunction TemplateParseResult_tsickle_Closure_declarations() {\n/** @type {?} */\nTemplateParseResult.prototype.templateAst;\n/** @type {?} */\nTemplateParseResult.prototype.errors;\n}\n\n@CompilerInjectable()\nexport class TemplateParser {\n/**\n * @param {?} _exprParser\n * @param {?} _schemaRegistry\n * @param {?} _htmlParser\n * @param {?} _console\n * @param {?} transforms\n */\nconstructor(\nprivate _exprParser: Parser,\nprivate _schemaRegistry: ElementSchemaRegistry,\nprivate _htmlParser: I18NHtmlParser,\nprivate _console: Console,\npublic transforms: TemplateAstVisitor[]) {}\n/**\n * @param {?} component\n * @param {?} template\n * @param {?} directives\n * @param {?} pipes\n * @param {?} schemas\n * @param {?} templateUrl\n * @return {?}\n */\nparse(\n      component: CompileDirectiveMetadata, template: string, directives: CompileDirectiveSummary[],\n      pipes: CompilePipeSummary[], schemas: SchemaMetadata[], templateUrl: string): TemplateAst[] {\n    const /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl);\n    const /** @type {?} */ warnings = result.errors.filter(error => error.level === ParseErrorLevel.WARNING);\n    const /** @type {?} */ errors = result.errors.filter(error => error.level === ParseErrorLevel.FATAL);\n\n    if (warnings.length > 0) {\n      this._console.warn(`Template parse warnings:\\n${warnings.join('\\n')}`);\n    }\n\n    if (errors.length > 0) {\n      const /** @type {?} */ errorString = errors.join('\\n');\n      throw new SyntaxError(`Template parse errors:\\n${errorString}`);\n    }\n\n    return result.templateAst;\n  }\n/**\n * @param {?} component\n * @param {?} template\n * @param {?} directives\n * @param {?} pipes\n * @param {?} schemas\n * @param {?} templateUrl\n * @return {?}\n */\ntryParse(\n      component: CompileDirectiveMetadata, template: string, directives: CompileDirectiveSummary[],\n      pipes: CompilePipeSummary[], schemas: SchemaMetadata[],\n      templateUrl: string): TemplateParseResult {\n    return this.tryParseHtml(\n        this.expandHtml(this._htmlParser.parse(\n            template, templateUrl, true, this.getInterpolationConfig(component))),\n        component, template, directives, pipes, schemas, templateUrl);\n  }\n/**\n * @param {?} htmlAstWithErrors\n * @param {?} component\n * @param {?} template\n * @param {?} directives\n * @param {?} pipes\n * @param {?} schemas\n * @param {?} templateUrl\n * @return {?}\n */\ntryParseHtml(\n      htmlAstWithErrors: ParseTreeResult, component: CompileDirectiveMetadata, template: string,\n      directives: CompileDirectiveSummary[], pipes: CompilePipeSummary[], schemas: SchemaMetadata[],\n      templateUrl: string): TemplateParseResult {\n    let /** @type {?} */ result: TemplateAst[];\n    const /** @type {?} */ errors = htmlAstWithErrors.errors;\n    if (htmlAstWithErrors.rootNodes.length > 0) {\n      const /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n      const /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n      const /** @type {?} */ providerViewContext =\n          new ProviderViewContext(component, htmlAstWithErrors.rootNodes[0].sourceSpan);\n      let /** @type {?} */ interpolationConfig: InterpolationConfig;\n      if (component.template && component.template.interpolation) {\n        interpolationConfig = {\n          start: component.template.interpolation[0],\n          end: component.template.interpolation[1]\n        };\n      }\n      const /** @type {?} */ bindingParser = new BindingParser(\n          this._exprParser, interpolationConfig, this._schemaRegistry, uniqPipes, errors);\n      const /** @type {?} */ parseVisitor = new TemplateParseVisitor(\n          providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas,\n          errors);\n      result = html.visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n      errors.push(...providerViewContext.errors);\n    } else {\n      result = [];\n    }\n    this._assertNoReferenceDuplicationOnTemplate(result, errors);\n\n    if (errors.length > 0) {\n      return new TemplateParseResult(result, errors);\n    }\n\n    if (this.transforms) {\n      this.transforms.forEach(\n          (transform: TemplateAstVisitor) => { result = templateVisitAll(transform, result); });\n    }\n\n    return new TemplateParseResult(result, errors);\n  }\n/**\n * @param {?} htmlAstWithErrors\n * @param {?=} forced\n * @return {?}\n */\nexpandHtml(htmlAstWithErrors: ParseTreeResult, forced: boolean = false): ParseTreeResult {\n    const /** @type {?} */ errors: ParseError[] = htmlAstWithErrors.errors;\n\n    if (errors.length == 0 || forced) {\n      // Transform ICU messages to angular directives\n      const /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n      errors.push(...expandedHtmlAst.errors);\n      htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n    }\n    return htmlAstWithErrors;\n  }\n/**\n * @param {?} component\n * @return {?}\n */\ngetInterpolationConfig(component: CompileDirectiveMetadata): InterpolationConfig {\n    if (component.template) {\n      return InterpolationConfig.fromArray(component.template.interpolation);\n    }\n  }\n/**\n * \\@internal\n * @param {?} result\n * @param {?} errors\n * @return {?}\n */\n_assertNoReferenceDuplicationOnTemplate(result: TemplateAst[], errors: TemplateParseError[]):\n      void {\n    const /** @type {?} */ existingReferences: string[] = [];\n\n    result.filter(element => !!( /** @type {?} */((<any>element))).references)\n        .forEach(element => ( /** @type {?} */((<any>element))).references.forEach((reference: ReferenceAst) => {\n          const /** @type {?} */ name = reference.name;\n          if (existingReferences.indexOf(name) < 0) {\n            existingReferences.push(name);\n          } else {\n            const /** @type {?} */ error = new TemplateParseError(\n                `Reference \"#${name}\" is defined several times`, reference.sourceSpan,\n                ParseErrorLevel.FATAL);\n            errors.push(error);\n          }\n        }));\n  }\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Parser, },\n{type: ElementSchemaRegistry, },\n{type: I18NHtmlParser, },\n{type: Console, },\n{type: Array, decorators: [{ type: Optional }, { type: Inject, args: [TEMPLATE_TRANSFORMS, ] }, ]},\n];\n}\n\nfunction TemplateParser_tsickle_Closure_declarations() {\n/**\n * @nocollapse\n * @type {?}\n */\nTemplateParser.ctorParameters;\n/** @type {?} */\nTemplateParser.prototype._exprParser;\n/** @type {?} */\nTemplateParser.prototype._schemaRegistry;\n/** @type {?} */\nTemplateParser.prototype._htmlParser;\n/** @type {?} */\nTemplateParser.prototype._console;\n/** @type {?} */\nTemplateParser.prototype.transforms;\n}\n\nclass TemplateParseVisitor implements html.Visitor {\n  selectorMatcher = new SelectorMatcher();\n  directivesIndex = new Map<CompileDirectiveSummary, number>();\n  ngContentCount: number = 0;\n/**\n * @param {?} providerViewContext\n * @param {?} directives\n * @param {?} _bindingParser\n * @param {?} _schemaRegistry\n * @param {?} _schemas\n * @param {?} _targetErrors\n */\nconstructor(\npublic providerViewContext: ProviderViewContext, directives: CompileDirectiveSummary[],\nprivate _bindingParser: BindingParser,\nprivate _schemaRegistry: ElementSchemaRegistry,\nprivate _schemas: SchemaMetadata[],\nprivate _targetErrors: TemplateParseError[]) {\n    directives.forEach((directive, index) => {\n      const selector = CssSelector.parse(directive.selector);\n      this.selectorMatcher.addSelectables(selector, directive);\n      this.directivesIndex.set(directive, index);\n    });\n  }\n/**\n * @param {?} expansion\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(expansion: html.Expansion, context: any): any { return null; }\n/**\n * @param {?} expansionCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(expansionCase: html.ExpansionCase, context: any): any { return null; }\n/**\n * @param {?} text\n * @param {?} parent\n * @return {?}\n */\nvisitText(text: html.Text, parent: ElementContext): any {\n    const /** @type {?} */ ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR);\n    const /** @type {?} */ expr = this._bindingParser.parseInterpolation(text.value, text.sourceSpan);\n    if (expr) {\n      return new BoundTextAst(expr, ngContentIndex, text.sourceSpan);\n    } else {\n      return new TextAst(text.value, ngContentIndex, text.sourceSpan);\n    }\n  }\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: html.Attribute, context: any): any {\n    return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n  }\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: html.Comment, context: any): any { return null; }\n/**\n * @param {?} element\n * @param {?} parent\n * @return {?}\n */\nvisitElement(element: html.Element, parent: ElementContext): any {\n    const /** @type {?} */ nodeName = element.name;\n    const /** @type {?} */ preparsedElement = preparseElement(element);\n    if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n        preparsedElement.type === PreparsedElementType.STYLE) {\n      // Skipping <script> for security reasons\n      // Skipping <style> as we already processed them\n      // in the StyleCompiler\n      return null;\n    }\n    if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n        isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n      // Skipping stylesheets with either relative urls or package scheme as we already processed\n      // them in the StyleCompiler\n      return null;\n    }\n\n    const /** @type {?} */ matchableAttrs: [string, string][] = [];\n    const /** @type {?} */ elementOrDirectiveProps: BoundProperty[] = [];\n    const /** @type {?} */ elementOrDirectiveRefs: ElementOrDirectiveRef[] = [];\n    const /** @type {?} */ elementVars: VariableAst[] = [];\n    const /** @type {?} */ events: BoundEventAst[] = [];\n\n    const /** @type {?} */ templateElementOrDirectiveProps: BoundProperty[] = [];\n    const /** @type {?} */ templateMatchableAttrs: [string, string][] = [];\n    const /** @type {?} */ templateElementVars: VariableAst[] = [];\n\n    let /** @type {?} */ hasInlineTemplates = false;\n    const /** @type {?} */ attrs: AttrAst[] = [];\n    const /** @type {?} */ lcElName = splitNsName(nodeName.toLowerCase())[1];\n    const /** @type {?} */ isTemplateElement = lcElName == TEMPLATE_ELEMENT;\n\n    element.attrs.forEach(attr => {\n      const /** @type {?} */ hasBinding = this._parseAttr(\n          isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events,\n          elementOrDirectiveRefs, elementVars);\n\n      let /** @type {?} */ templateBindingsSource: string|undefined;\n      let /** @type {?} */ prefixToken: string|undefined;\n      let /** @type {?} */ normalizedName = this._normalizeAttributeName(attr.name);\n\n      if (normalizedName == TEMPLATE_ATTR) {\n        templateBindingsSource = attr.value;\n      } else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n        templateBindingsSource = attr.value;\n        prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length) + ':';\n      }\n\n      const /** @type {?} */ hasTemplateBinding = isPresent(templateBindingsSource);\n      if (hasTemplateBinding) {\n        if (hasInlineTemplates) {\n          this._reportError(\n              `Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *`,\n              attr.sourceSpan);\n        }\n        hasInlineTemplates = true;\n        this._bindingParser.parseInlineTemplateBinding(\n            prefixToken, templateBindingsSource, attr.sourceSpan, templateMatchableAttrs,\n            templateElementOrDirectiveProps, templateElementVars);\n      }\n\n      if (!hasBinding && !hasTemplateBinding) {\n        // don't include the bindings as attributes as well in the AST\n        attrs.push(this.visitAttribute(attr, null));\n        matchableAttrs.push([attr.name, attr.value]);\n      }\n    });\n\n    const /** @type {?} */ elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n    const {directives: directiveMetas, matchElement} =\n        this._parseDirectives(this.selectorMatcher, elementCssSelector);\n    const /** @type {?} */ references: ReferenceAst[] = [];\n    const /** @type {?} */ directiveAsts = this._createDirectiveAsts(\n        isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps,\n        elementOrDirectiveRefs, element.sourceSpan, references);\n    const /** @type {?} */ elementProps: BoundElementPropertyAst[] =\n        this._createElementPropertyAsts(element.name, elementOrDirectiveProps, directiveAsts);\n    const /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n\n    const /** @type {?} */ providerContext = new ProviderElementContext(\n        this.providerViewContext, parent.providerContext, isViewRoot, directiveAsts, attrs,\n        references, element.sourceSpan);\n\n    const /** @type {?} */ children = html.visitAll(\n        preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children,\n        ElementContext.create(\n            isTemplateElement, directiveAsts,\n            isTemplateElement ? parent.providerContext : providerContext));\n    providerContext.afterElement();\n    // Override the actual selector when the `ngProjectAs` attribute is provided\n    const /** @type {?} */ projectionSelector = isPresent(preparsedElement.projectAs) ?\n        CssSelector.parse(preparsedElement.projectAs)[0] :\n        elementCssSelector;\n    const /** @type {?} */ ngContentIndex = parent.findNgContentIndex(projectionSelector);\n    let /** @type {?} */ parsedElement: TemplateAst;\n\n    if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n      if (element.children && !element.children.every(_isEmptyTextNode)) {\n        this._reportError(`<ng-content> element cannot have content.`, element.sourceSpan);\n      }\n\n      parsedElement = new NgContentAst(\n          this.ngContentCount++, hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);\n    } else if (isTemplateElement) {\n      this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n      this._assertNoComponentsNorElementBindingsOnTemplate(\n          directiveAsts, elementProps, element.sourceSpan);\n\n      parsedElement = new EmbeddedTemplateAst(\n          attrs, events, references, elementVars, providerContext.transformedDirectiveAsts,\n          providerContext.transformProviders, providerContext.transformedHasViewContainer, children,\n          hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);\n    } else {\n      this._assertElementExists(matchElement, element);\n      this._assertOnlyOneComponent(directiveAsts, element.sourceSpan);\n\n      const /** @type {?} */ ngContentIndex =\n          hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n      parsedElement = new ElementAst(\n          nodeName, attrs, elementProps, events, references,\n          providerContext.transformedDirectiveAsts, providerContext.transformProviders,\n          providerContext.transformedHasViewContainer, children,\n          hasInlineTemplates ? null : ngContentIndex, element.sourceSpan, element.endSourceSpan);\n\n      this._findComponentDirectives(directiveAsts)\n          .forEach(\n              componentDirectiveAst => this._validateElementAnimationInputOutputs(\n                  componentDirectiveAst.hostProperties, componentDirectiveAst.hostEvents,\n                  componentDirectiveAst.directive.template));\n\n      const /** @type {?} */ componentTemplate = providerContext.viewContext.component.template;\n      this._validateElementAnimationInputOutputs(\n          elementProps, events, componentTemplate.toSummary());\n    }\n\n    if (hasInlineTemplates) {\n      const /** @type {?} */ templateCssSelector =\n          createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n      const {directives: templateDirectiveMetas} =\n          this._parseDirectives(this.selectorMatcher, templateCssSelector);\n      const /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(\n          true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [],\n          element.sourceSpan, []);\n      const /** @type {?} */ templateElementProps: BoundElementPropertyAst[] = this._createElementPropertyAsts(\n          element.name, templateElementOrDirectiveProps, templateDirectiveAsts);\n      this._assertNoComponentsNorElementBindingsOnTemplate(\n          templateDirectiveAsts, templateElementProps, element.sourceSpan);\n      const /** @type {?} */ templateProviderContext = new ProviderElementContext(\n          this.providerViewContext, parent.providerContext, parent.isTemplateElement,\n          templateDirectiveAsts, [], [], element.sourceSpan);\n      templateProviderContext.afterElement();\n\n      parsedElement = new EmbeddedTemplateAst(\n          [], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts,\n          templateProviderContext.transformProviders,\n          templateProviderContext.transformedHasViewContainer, [parsedElement], ngContentIndex,\n          element.sourceSpan);\n    }\n\n    return parsedElement;\n  }\n/**\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} template\n * @return {?}\n */\nprivate _validateElementAnimationInputOutputs(\n      inputs: BoundElementPropertyAst[], outputs: BoundEventAst[],\n      template: CompileTemplateSummary) {\n    const /** @type {?} */ triggerLookup = new Set<string>();\n    template.animations.forEach(entry => { triggerLookup.add(entry); });\n\n    const /** @type {?} */ animationInputs = inputs.filter(input => input.isAnimation);\n    animationInputs.forEach(input => {\n      const /** @type {?} */ name = input.name;\n      if (!triggerLookup.has(name)) {\n        this._reportError(`Couldn't find an animation entry for \"${name}\"`, input.sourceSpan);\n      }\n    });\n\n    outputs.forEach(output => {\n      if (output.isAnimation) {\n        const /** @type {?} */ found = animationInputs.find(input => input.name == output.name);\n        if (!found) {\n          this._reportError(\n              `Unable to listen on (@${output.name}.${output.phase}) because the animation trigger [@${output.name}] isn't being used on the same element`,\n              output.sourceSpan);\n        }\n      }\n    });\n  }\n/**\n * @param {?} isTemplateElement\n * @param {?} attr\n * @param {?} targetMatchableAttrs\n * @param {?} targetProps\n * @param {?} targetEvents\n * @param {?} targetRefs\n * @param {?} targetVars\n * @return {?}\n */\nprivate _parseAttr(\n      isTemplateElement: boolean, attr: html.Attribute, targetMatchableAttrs: string[][],\n      targetProps: BoundProperty[], targetEvents: BoundEventAst[],\n      targetRefs: ElementOrDirectiveRef[], targetVars: VariableAst[]): boolean {\n    const /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n    const /** @type {?} */ value = attr.value;\n    const /** @type {?} */ srcSpan = attr.sourceSpan;\n\n    const /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n    let /** @type {?} */ hasBinding = false;\n\n    if (bindParts !== null) {\n      hasBinding = true;\n      if (isPresent(bindParts[KW_BIND_IDX])) {\n        this._bindingParser.parsePropertyBinding(\n            bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n\n      } else if (bindParts[KW_LET_IDX]) {\n        if (isTemplateElement) {\n          const /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n          this._parseVariable(identifier, value, srcSpan, targetVars);\n        } else {\n          this._reportError(`\"let-\" is only supported on template elements.`, srcSpan);\n        }\n\n      } else if (bindParts[KW_REF_IDX]) {\n        const /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n        this._parseReference(identifier, value, srcSpan, targetRefs);\n\n      } else if (bindParts[KW_ON_IDX]) {\n        this._bindingParser.parseEvent(\n            bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n\n      } else if (bindParts[KW_BINDON_IDX]) {\n        this._bindingParser.parsePropertyBinding(\n            bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n        this._parseAssignmentEvent(\n            bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n\n      } else if (bindParts[KW_AT_IDX]) {\n        this._bindingParser.parseLiteralAttr(\n            name, value, srcSpan, targetMatchableAttrs, targetProps);\n\n      } else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n        this._bindingParser.parsePropertyBinding(\n            bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs,\n            targetProps);\n        this._parseAssignmentEvent(\n            bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n\n      } else if (bindParts[IDENT_PROPERTY_IDX]) {\n        this._bindingParser.parsePropertyBinding(\n            bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs,\n            targetProps);\n\n      } else if (bindParts[IDENT_EVENT_IDX]) {\n        this._bindingParser.parseEvent(\n            bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n      }\n    } else {\n      hasBinding = this._bindingParser.parsePropertyInterpolation(\n          name, value, srcSpan, targetMatchableAttrs, targetProps);\n    }\n\n    if (!hasBinding) {\n      this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n    }\n\n    return hasBinding;\n  }\n/**\n * @param {?} attrName\n * @return {?}\n */\nprivate _normalizeAttributeName(attrName: string): string {\n    return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n  }\n/**\n * @param {?} identifier\n * @param {?} value\n * @param {?} sourceSpan\n * @param {?} targetVars\n * @return {?}\n */\nprivate _parseVariable(\n      identifier: string, value: string, sourceSpan: ParseSourceSpan, targetVars: VariableAst[]) {\n    if (identifier.indexOf('-') > -1) {\n      this._reportError(`\"-\" is not allowed in variable names`, sourceSpan);\n    }\n\n    targetVars.push(new VariableAst(identifier, value, sourceSpan));\n  }\n/**\n * @param {?} identifier\n * @param {?} value\n * @param {?} sourceSpan\n * @param {?} targetRefs\n * @return {?}\n */\nprivate _parseReference(\n      identifier: string, value: string, sourceSpan: ParseSourceSpan,\n      targetRefs: ElementOrDirectiveRef[]) {\n    if (identifier.indexOf('-') > -1) {\n      this._reportError(`\"-\" is not allowed in reference names`, sourceSpan);\n    }\n\n    targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n  }\n/**\n * @param {?} name\n * @param {?} expression\n * @param {?} sourceSpan\n * @param {?} targetMatchableAttrs\n * @param {?} targetEvents\n * @return {?}\n */\nprivate _parseAssignmentEvent(\n      name: string, expression: string, sourceSpan: ParseSourceSpan,\n      targetMatchableAttrs: string[][], targetEvents: BoundEventAst[]) {\n    this._bindingParser.parseEvent(\n        `${name}Change`, `${expression}=$event`, sourceSpan, targetMatchableAttrs, targetEvents);\n  }\n/**\n * @param {?} selectorMatcher\n * @param {?} elementCssSelector\n * @return {?}\n */\nprivate _parseDirectives(selectorMatcher: SelectorMatcher, elementCssSelector: CssSelector):\n      {directives: CompileDirectiveSummary[], matchElement: boolean} {\n    // Need to sort the directives so that we get consistent results throughout,\n    // as selectorMatcher uses Maps inside.\n    // Also deduplicate directives as they might match more than one time!\n    const /** @type {?} */ directives = new Array(this.directivesIndex.size);\n    // Whether any directive selector matches on the element name\n    let /** @type {?} */ matchElement = false;\n\n    selectorMatcher.match(elementCssSelector, (selector, directive) => {\n      directives[this.directivesIndex.get(directive)] = directive;\n      matchElement = matchElement || selector.hasElementSelector();\n    });\n\n    return {\n      directives: directives.filter(dir => !!dir),\n      matchElement,\n    };\n  }\n/**\n * @param {?} isTemplateElement\n * @param {?} elementName\n * @param {?} directives\n * @param {?} props\n * @param {?} elementOrDirectiveRefs\n * @param {?} elementSourceSpan\n * @param {?} targetReferences\n * @return {?}\n */\nprivate _createDirectiveAsts(\n      isTemplateElement: boolean, elementName: string, directives: CompileDirectiveSummary[],\n      props: BoundProperty[], elementOrDirectiveRefs: ElementOrDirectiveRef[],\n      elementSourceSpan: ParseSourceSpan, targetReferences: ReferenceAst[]): DirectiveAst[] {\n    const /** @type {?} */ matchedReferences = new Set<string>();\n    let /** @type {?} */ component: CompileDirectiveSummary = null;\n\n    const /** @type {?} */ directiveAsts = directives.map((directive) => {\n      const /** @type {?} */ sourceSpan = new ParseSourceSpan(\n          elementSourceSpan.start, elementSourceSpan.end,\n          `Directive ${identifierName(directive.type)}`);\n\n      if (directive.isComponent) {\n        component = directive;\n      }\n      const /** @type {?} */ directiveProperties: BoundDirectivePropertyAst[] = [];\n      const /** @type {?} */ hostProperties =\n          this._bindingParser.createDirectiveHostPropertyAsts(directive, sourceSpan);\n      // Note: We need to check the host properties here as well,\n      // as we don't know the element name in the DirectiveWrapperCompiler yet.\n      this._checkPropertiesInSchema(elementName, hostProperties);\n      const /** @type {?} */ hostEvents = this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan);\n      this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties);\n      elementOrDirectiveRefs.forEach((elOrDirRef) => {\n        if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n            (directive.exportAs == elOrDirRef.value)) {\n          targetReferences.push(new ReferenceAst(\n              elOrDirRef.name, identifierToken(directive.type), elOrDirRef.sourceSpan));\n          matchedReferences.add(elOrDirRef.name);\n        }\n      });\n      return new DirectiveAst(\n          directive, directiveProperties, hostProperties, hostEvents, sourceSpan);\n    });\n\n    elementOrDirectiveRefs.forEach((elOrDirRef) => {\n      if (elOrDirRef.value.length > 0) {\n        if (!matchedReferences.has(elOrDirRef.name)) {\n          this._reportError(\n              `There is no directive with \"exportAs\" set to \"${elOrDirRef.value}\"`,\n              elOrDirRef.sourceSpan);\n        }\n      } else if (!component) {\n        let /** @type {?} */ refToken: CompileTokenMetadata = null;\n        if (isTemplateElement) {\n          refToken = createIdentifierToken(Identifiers.TemplateRef);\n        }\n        targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n      }\n    });\n    return directiveAsts;\n  }\n/**\n * @param {?} directiveProperties\n * @param {?} boundProps\n * @param {?} targetBoundDirectiveProps\n * @return {?}\n */\nprivate _createDirectivePropertyAsts(\n      directiveProperties: {[key: string]: string}, boundProps: BoundProperty[],\n      targetBoundDirectiveProps: BoundDirectivePropertyAst[]) {\n    if (directiveProperties) {\n      const /** @type {?} */ boundPropsByName = new Map<string, BoundProperty>();\n      boundProps.forEach(boundProp => {\n        const /** @type {?} */ prevValue = boundPropsByName.get(boundProp.name);\n        if (!prevValue || prevValue.isLiteral) {\n          // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n          boundPropsByName.set(boundProp.name, boundProp);\n        }\n      });\n\n      Object.keys(directiveProperties).forEach(dirProp => {\n        const /** @type {?} */ elProp = directiveProperties[dirProp];\n        const /** @type {?} */ boundProp = boundPropsByName.get(elProp);\n\n        // Bindings are optional, so this binding only needs to be set up if an expression is given.\n        if (boundProp) {\n          targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(\n              dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n        }\n      });\n    }\n  }\n/**\n * @param {?} elementName\n * @param {?} props\n * @param {?} directives\n * @return {?}\n */\nprivate _createElementPropertyAsts(\n      elementName: string, props: BoundProperty[],\n      directives: DirectiveAst[]): BoundElementPropertyAst[] {\n    const /** @type {?} */ boundElementProps: BoundElementPropertyAst[] = [];\n    const /** @type {?} */ boundDirectivePropsIndex = new Map<string, BoundDirectivePropertyAst>();\n\n    directives.forEach((directive: DirectiveAst) => {\n      directive.inputs.forEach((prop: BoundDirectivePropertyAst) => {\n        boundDirectivePropsIndex.set(prop.templateName, prop);\n      });\n    });\n\n    props.forEach((prop: BoundProperty) => {\n      if (!prop.isLiteral && !boundDirectivePropsIndex.get(prop.name)) {\n        boundElementProps.push(this._bindingParser.createElementPropertyAst(elementName, prop));\n      }\n    });\n    this._checkPropertiesInSchema(elementName, boundElementProps);\n    return boundElementProps;\n  }\n/**\n * @param {?} directives\n * @return {?}\n */\nprivate _findComponentDirectives(directives: DirectiveAst[]): DirectiveAst[] {\n    return directives.filter(directive => directive.directive.isComponent);\n  }\n/**\n * @param {?} directives\n * @return {?}\n */\nprivate _findComponentDirectiveNames(directives: DirectiveAst[]): string[] {\n    return this._findComponentDirectives(directives)\n        .map(directive => identifierName(directive.directive.type));\n  }\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @return {?}\n */\nprivate _assertOnlyOneComponent(directives: DirectiveAst[], sourceSpan: ParseSourceSpan) {\n    const /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n    if (componentTypeNames.length > 1) {\n      this._reportError(\n          `More than one component matched on this element.\\n` +\n              `Make sure that only one component's selector can match a given element.\\n` +\n              `Conflicting components: ${componentTypeNames.join(',')}`,\n          sourceSpan);\n    }\n  }\n/**\n * Make sure that non-angular tags conform to the schemas.\n * \n * Note: An element is considered an angular tag when at least one directive selector matches the\n * tag name.\n * \n * @param {?} matchElement Whether any directive has matched on the tag name\n * @param {?} element the html element\n * @return {?}\n */\nprivate _assertElementExists(matchElement: boolean, element: html.Element) {\n    const /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n\n    if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n      const /** @type {?} */ errorMsg = `'${elName}' is not a known element:\\n` +\n          `1. If '${elName}' is an Angular component, then verify that it is part of this module.\\n` +\n          `2. If '${elName}' is a Web Component then add \"CUSTOM_ELEMENTS_SCHEMA\" to the '@NgModule.schemas' of this component to suppress this message.`;\n      this._reportError(errorMsg, element.sourceSpan);\n    }\n  }\n/**\n * @param {?} directives\n * @param {?} elementProps\n * @param {?} sourceSpan\n * @return {?}\n */\nprivate _assertNoComponentsNorElementBindingsOnTemplate(\n      directives: DirectiveAst[], elementProps: BoundElementPropertyAst[],\n      sourceSpan: ParseSourceSpan) {\n    const /** @type {?} */ componentTypeNames: string[] = this._findComponentDirectiveNames(directives);\n    if (componentTypeNames.length > 0) {\n      this._reportError(\n          `Components on an embedded template: ${componentTypeNames.join(',')}`, sourceSpan);\n    }\n    elementProps.forEach(prop => {\n      this._reportError(\n          `Property binding ${prop.name} not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \"@NgModule.declarations\".`,\n          sourceSpan);\n    });\n  }\n/**\n * @param {?} directives\n * @param {?} events\n * @return {?}\n */\nprivate _assertAllEventsPublishedByDirectives(\n      directives: DirectiveAst[], events: BoundEventAst[]) {\n    const /** @type {?} */ allDirectiveEvents = new Set<string>();\n\n    directives.forEach(directive => {\n      Object.keys(directive.directive.outputs).forEach(k => {\n        const /** @type {?} */ eventName = directive.directive.outputs[k];\n        allDirectiveEvents.add(eventName);\n      });\n    });\n\n    events.forEach(event => {\n      if (isPresent(event.target) || !allDirectiveEvents.has(event.name)) {\n        this._reportError(\n            `Event binding ${event.fullName} not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \"@NgModule.declarations\".`,\n            event.sourceSpan);\n      }\n    });\n  }\n/**\n * @param {?} elementName\n * @param {?} boundProps\n * @return {?}\n */\nprivate _checkPropertiesInSchema(elementName: string, boundProps: BoundElementPropertyAst[]) {\n    boundProps.forEach((boundProp) => {\n      if (boundProp.type === PropertyBindingType.Property &&\n          !this._schemaRegistry.hasProperty(elementName, boundProp.name, this._schemas)) {\n        let /** @type {?} */ errorMsg =\n            `Can't bind to '${boundProp.name}' since it isn't a known property of '${elementName}'.`;\n        if (elementName.indexOf('-') > -1) {\n          errorMsg +=\n              `\\n1. If '${elementName}' is an Angular component and it has '${boundProp.name}' input, then verify that it is part of this module.` +\n              `\\n2. If '${elementName}' is a Web Component then add \"CUSTOM_ELEMENTS_SCHEMA\" to the '@NgModule.schemas' of this component to suppress this message.\\n`;\n        }\n        this._reportError(errorMsg, boundProp.sourceSpan);\n      }\n    });\n  }\n/**\n * @param {?} message\n * @param {?} sourceSpan\n * @param {?=} level\n * @return {?}\n */\nprivate _reportError(\n      message: string, sourceSpan: ParseSourceSpan,\n      level: ParseErrorLevel = ParseErrorLevel.FATAL) {\n    this._targetErrors.push(new ParseError(sourceSpan, message, level));\n  }\n}\n\nfunction TemplateParseVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\nTemplateParseVisitor.prototype.selectorMatcher;\n/** @type {?} */\nTemplateParseVisitor.prototype.directivesIndex;\n/** @type {?} */\nTemplateParseVisitor.prototype.ngContentCount;\n/** @type {?} */\nTemplateParseVisitor.prototype.providerViewContext;\n/** @type {?} */\nTemplateParseVisitor.prototype._bindingParser;\n/** @type {?} */\nTemplateParseVisitor.prototype._schemaRegistry;\n/** @type {?} */\nTemplateParseVisitor.prototype._schemas;\n/** @type {?} */\nTemplateParseVisitor.prototype._targetErrors;\n}\n\nclass NonBindableVisitor implements html.Visitor {\n/**\n * @param {?} ast\n * @param {?} parent\n * @return {?}\n */\nvisitElement(ast: html.Element, parent: ElementContext): ElementAst {\n    const /** @type {?} */ preparsedElement = preparseElement(ast);\n    if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n        preparsedElement.type === PreparsedElementType.STYLE ||\n        preparsedElement.type === PreparsedElementType.STYLESHEET) {\n      // Skipping <script> for security reasons\n      // Skipping <style> and stylesheets as we already processed them\n      // in the StyleCompiler\n      return null;\n    }\n\n    const /** @type {?} */ attrNameAndValues = ast.attrs.map((attr): [string, string] => [attr.name, attr.value]);\n    const /** @type {?} */ selector = createElementCssSelector(ast.name, attrNameAndValues);\n    const /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n    const /** @type {?} */ children = html.visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n    return new ElementAst(\n        ast.name, html.visitAll(this, ast.attrs), [], [], [], [], [], false, children,\n        ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n  }\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: html.Comment, context: any): any { return null; }\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: html.Attribute, context: any): AttrAst {\n    return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n  }\n/**\n * @param {?} text\n * @param {?} parent\n * @return {?}\n */\nvisitText(text: html.Text, parent: ElementContext): TextAst {\n    const /** @type {?} */ ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR);\n    return new TextAst(text.value, ngContentIndex, text.sourceSpan);\n  }\n/**\n * @param {?} expansion\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(expansion: html.Expansion, context: any): any { return expansion; }\n/**\n * @param {?} expansionCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(expansionCase: html.ExpansionCase, context: any): any { return expansionCase; }\n}\nclass ElementOrDirectiveRef {\n/**\n * @param {?} name\n * @param {?} value\n * @param {?} sourceSpan\n */\nconstructor(public name: string,\npublic value: string,\npublic sourceSpan: ParseSourceSpan) {}\n}\n\nfunction ElementOrDirectiveRef_tsickle_Closure_declarations() {\n/** @type {?} */\nElementOrDirectiveRef.prototype.name;\n/** @type {?} */\nElementOrDirectiveRef.prototype.value;\n/** @type {?} */\nElementOrDirectiveRef.prototype.sourceSpan;\n}\n\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nexport function splitClasses(classAttrValue: string): string[] {\n  return classAttrValue.trim().split(/\\s+/g);\n}\nclass ElementContext {\n/**\n * @param {?} isTemplateElement\n * @param {?} directives\n * @param {?} providerContext\n * @return {?}\n */\nstatic create(\n      isTemplateElement: boolean, directives: DirectiveAst[],\n      providerContext: ProviderElementContext): ElementContext {\n    const /** @type {?} */ matcher = new SelectorMatcher();\n    let /** @type {?} */ wildcardNgContentIndex: number = null;\n    const /** @type {?} */ component = directives.find(directive => directive.directive.isComponent);\n    if (component) {\n      const /** @type {?} */ ngContentSelectors = component.directive.template.ngContentSelectors;\n      for (let /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n        const /** @type {?} */ selector = ngContentSelectors[i];\n        if (selector === '*') {\n          wildcardNgContentIndex = i;\n        } else {\n          matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n        }\n      }\n    }\n    return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n  }\n/**\n * @param {?} isTemplateElement\n * @param {?} _ngContentIndexMatcher\n * @param {?} _wildcardNgContentIndex\n * @param {?} providerContext\n */\nconstructor(\npublic isTemplateElement: boolean,\nprivate _ngContentIndexMatcher: SelectorMatcher,\nprivate _wildcardNgContentIndex: number,\npublic providerContext: ProviderElementContext) {}\n/**\n * @param {?} selector\n * @return {?}\n */\nfindNgContentIndex(selector: CssSelector): number {\n    const /** @type {?} */ ngContentIndices: number[] = [];\n    this._ngContentIndexMatcher.match(\n        selector, (selector, ngContentIndex) => { ngContentIndices.push(ngContentIndex); });\n    ngContentIndices.sort();\n    if (isPresent(this._wildcardNgContentIndex)) {\n      ngContentIndices.push(this._wildcardNgContentIndex);\n    }\n    return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n  }\n}\n\nfunction ElementContext_tsickle_Closure_declarations() {\n/** @type {?} */\nElementContext.prototype.isTemplateElement;\n/** @type {?} */\nElementContext.prototype._ngContentIndexMatcher;\n/** @type {?} */\nElementContext.prototype._wildcardNgContentIndex;\n/** @type {?} */\nElementContext.prototype.providerContext;\n}\n\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nexport function createElementCssSelector(\n    elementName: string, attributes: [string, string][]): CssSelector {\n  const /** @type {?} */ cssSelector = new CssSelector();\n  const /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n\n  cssSelector.setElement(elNameNoNs);\n\n  for (let /** @type {?} */ i = 0; i < attributes.length; i++) {\n    const /** @type {?} */ attrName = attributes[i][0];\n    const /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n    const /** @type {?} */ attrValue = attributes[i][1];\n\n    cssSelector.addAttribute(attrNameNoNs, attrValue);\n    if (attrName.toLowerCase() == CLASS_ATTR) {\n      const /** @type {?} */ classes = splitClasses(attrValue);\n      classes.forEach(className => cssSelector.addClassName(className));\n    }\n  }\n  return cssSelector;\n}\n\nconst /** @type {?} */ EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nconst /** @type {?} */ NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node: html.Node): boolean {\n  return node instanceof html.Text && node.value.trim().length == 0;\n}\n/**\n * @param {?} items\n * @return {?}\n */\nexport function removeSummaryDuplicates<T extends{type: CompileTypeMetadata}>(items: T[]): T[] {\n  const /** @type {?} */ map = new Map<any, T>();\n\n  items.forEach((item) => {\n    if (!map.get(item.type.reference)) {\n      map.set(item.type.reference, item);\n    }\n  });\n\n  return Array.from(map.values());\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}