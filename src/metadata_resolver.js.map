{"version":3,"file":"metadata_resolver.js","sourceRoot":"","sources":["../../../../modules/@angular/compiler/src/metadata_resolver.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAC,wBAAwB,EAA0B,sBAAsB,EAAE,kCAAkC,EAAqB,iCAAiC,EAA0B,gCAAgC,EAAE,sBAAsB,EAAE,0BAA0B,EAAE,SAAS,EAA2B,SAAS,EAAa,IAAI,EAAE,MAAM,EAAE,UAAU,EAAuB,WAAW,EAAE,QAAQ,EAAmC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,iBAAiB,EAAC,MAAM,qBAAqB;OAEvf,EAAC,YAAY,EAAC,MAAM,qBAAqB;OACzC,EAAC,oBAAoB,EAAE,0BAA0B,EAAC,MAAM,cAAc;OACtE,KAAK,GAAG,MAAM,oBAAoB;OAClC,EAAC,mBAAmB,EAAC,MAAM,wBAAwB;OACnD,EAAC,iBAAiB,EAAC,MAAM,sBAAsB;OAE/C,EAAC,OAAO,EAAE,SAAS,EAAE,SAAS,EAAC,MAAM,eAAe;OACpD,EAAC,WAAW,EAAyB,iBAAiB,EAAC,MAAM,eAAe;OAC5E,EAAC,gBAAgB,EAAC,MAAM,uBAAuB;OAC/C,EAAC,gBAAgB,EAAC,MAAM,sBAAsB;OAC9C,EAAC,YAAY,EAAC,MAAM,iBAAiB;OACrC,EAAC,0BAA0B,EAAE,sBAAsB,EAAE,eAAe,EAAE,SAAS,EAAC,MAAM,uBAAuB;OAC7G,EAAC,qBAAqB,EAAC,MAAM,kCAAkC;OAC/D,EAAC,eAAe,EAAC,MAAM,oBAAoB;OAC3C,EAAC,YAAY,EAAC,MAAM,gBAAgB;OACpC,EAAC,aAAa,EAAmB,gBAAgB,EAAE,UAAU,EAAC,MAAM,QAAQ;AAGnF,OAAO,MAAM,gBAAgB,CAAC,qBAAqB,GAAG,IAAI,WAAW,CAAC,gBAAgB,CAAC,CAAC;AACxF;IAMA;;;;;;;;;OASG;IACH,YACQ,iBAAmC,EACnC,kBAAqC,EACrC,aAA2B,EAC3B,gBAAiC,EACjC,eAAsC,EACtC,oBAAyC,EACzC,UAAU,GAAoB,SAAS,EACvC,eAAgC;QAPhC,sBAAiB,GAAjB,iBAAiB,CAAkB;QACnC,uBAAkB,GAAlB,kBAAkB,CAAmB;QACrC,kBAAa,GAAb,aAAa,CAAc;QAC3B,qBAAgB,GAAhB,gBAAgB,CAAiB;QACjC,oBAAe,GAAf,eAAe,CAAuB;QACtC,yBAAoB,GAApB,oBAAoB,CAAqB;QACzC,eAAU,GAAV,UAAU,CAA6B;QACvC,oBAAe,GAAf,eAAe,CAAiB;QAvBhC,oBAAe,GAAG,IAAI,GAAG,EAA2C,CAAC;QACrE,kBAAa,GAAG,IAAI,GAAG,EAAqC,CAAC;QAC7D,eAAU,GAAG,IAAI,GAAG,EAAsC,CAAC;QAC3D,mBAAc,GAAG,IAAI,GAAG,EAA0C,CAAC;QACnE,qBAAgB,GAAG,IAAI,GAAG,EAAwB,CAAC;IAmBhB,CAAC;IAC5C;;;OAGG;IACH,aAAa,CAAC,IAAe;QACzB,MAAM,gBAAgB,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAChE,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC7B,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACnC,oEAAoE;QACpE,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAC5B,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACZ,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACnD,CAAC;IACH,CAAC;IACH;;OAEG;IACH,UAAU;QACN,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;QAC7B,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;QACxB,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAC5B,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;QAC9B,IAAI,CAAC,oBAAoB,CAAC,UAAU,EAAE,CAAC;IACzC,CAAC;IACH;;;OAGG;IACH,yBAAyB,CAAC,KAA6B;QACnD,MAAM,gBAAgB,CAAC,IAAI,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,IAAI,IAAI,CAAC,0BAA0B,CAAC,GAAG,CAAC,CAAC,CAAC;QACjG,MAAM,CAAC,IAAI,GAAG,CAAC,6BAA6B,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACjE,CAAC;IACH;;;OAGG;IACK,0BAA0B,CAAC,KAA6B;QAE5D,EAAE,CAAC,CAAC,KAAK,YAAY,iCAAiC,CAAC,CAAC,CAAC;YACvD,MAAM,gBAAgB,CAAC,MAAM,GAAG,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC9E,MAAM,CAAC,IAAI,GAAG,CAAC,wCAAwC,CAAC,KAAK,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;QACvF,CAAC;QAED,EAAE,CAAC,CAAC,KAAK,YAAY,gCAAgC,CAAC,CAAC,CAAC;YACtD,MAAM,CAAC,IAAI,GAAG,CAAC,uCAAuC,CAClD,KAAK,CAAC,eAAe,EAAE,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;QACtE,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IACH;;;OAGG;IACK,0BAA0B,CAAC,KAA6B;QAE5D,MAAM,CAAC,IAAI,GAAG,CAAC,6BAA6B,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;IAC3E,CAAC;IACH;;;OAGG;IACK,qBAAqB,CAAC,KAAwB;QAClD,EAAE,CAAC,CAAC,KAAK,YAAY,sBAAsB,CAAC,CAAC,CAAC;YAC5C,MAAM,CAAC,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC;QAChD,CAAC;QAED,EAAE,CAAC,CAAC,KAAK,YAAY,kCAAkC,CAAC,CAAC,CAAC;YACxD,MAAM,CAAC,IAAI,GAAG,CAAC,yCAAyC,CACpD,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACxE,CAAC;QAED,EAAE,CAAC,CAAC,KAAK,YAAY,wBAAwB,CAAC,CAAC,CAAC;YAC9C,MAAM,gBAAgB,CAAC,WAAW,GAAmB,CACgC,IAAI;iBAChF,qBAAqB,CAAC,KAAK,CAAC,MAAM,CAAE,CAAC,CAAC;YAC/C,MAAM,CAAC,IAAI,GAAG,CAAC,+BAA+B,CAAC,KAAK,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;QAC7E,CAAC;QAED,EAAE,CAAC,CAAC,KAAK,YAAY,0BAA0B,CAAC,CAAC,CAAC;YAChD,MAAM,gBAAgB,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC;YAEzF,EAAE,CAAC,CAAC,KAAK,YAAY,sBAAsB,CAAC,CAAC,CAAC;gBAC5C,MAAM,CAAC,IAAI,GAAG,CAAC,6BAA6B,CAAC,KAAK,CAAC,CAAC;YACtD,CAAC;YAED,MAAM,CAAC,IAAI,GAAG,CAAC,gCAAgC,CAAC,KAAK,CAAC,CAAC;QACzD,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IACH;;;;OAIG;IACK,YAAY,CAAC,IAAS,EAAE,IAA4B;QACxD,IAAI,gBAAgB,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC5D,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACb,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;YACrD,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QACxC,CAAC;QACD,MAAM,CAAC,OAAO,IAAI,OAAO,CAAC,WAAW,KAAK,IAAI,GAAG,OAAO,GAAG,IAAI,CAAC;IAClE,CAAC;IACH;;;;OAIG;IACK,sBAAsB,CAAC,aAAkB,EAAE,MAAe;QAC9D,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YAC5C,MAAM,CAAC;QACT,CAAC;QACD,aAAa,GAAG,iBAAiB,CAAC,aAAa,CAAC,CAAC;QACjD,MAAM,EAAC,UAAU,EAAE,QAAQ,EAAC,GAAG,IAAI,CAAC,iCAAiC,CAAC,aAAa,CAAC,CAAC;QAErF,MAAM,gBAAgB,CAAC,uBAAuB,GAAG,CAAC,gBAA6C;YAC7F,MAAM,gBAAgB,CAAC,iBAAiB,GAAG,IAAI,GAAG,CAAC,wBAAwB,CAAC;gBAC1E,IAAI,EAAE,QAAQ,CAAC,IAAI;gBACnB,WAAW,EAAE,QAAQ,CAAC,WAAW;gBACjC,QAAQ,EAAE,QAAQ,CAAC,QAAQ;gBAC3B,QAAQ,EAAE,QAAQ,CAAC,QAAQ;gBAC3B,eAAe,EAAE,QAAQ,CAAC,eAAe;gBACzC,MAAM,EAAE,QAAQ,CAAC,MAAM;gBACvB,OAAO,EAAE,QAAQ,CAAC,OAAO;gBACzB,aAAa,EAAE,QAAQ,CAAC,aAAa;gBACrC,cAAc,EAAE,QAAQ,CAAC,cAAc;gBACvC,cAAc,EAAE,QAAQ,CAAC,cAAc;gBACvC,SAAS,EAAE,QAAQ,CAAC,SAAS;gBAC7B,aAAa,EAAE,QAAQ,CAAC,aAAa;gBACrC,OAAO,EAAE,QAAQ,CAAC,OAAO;gBACzB,WAAW,EAAE,QAAQ,CAAC,WAAW;gBACjC,eAAe,EAAE,QAAQ,CAAC,eAAe;gBACzC,QAAQ,EAAE,gBAAgB;aAC3B,CAAC,CAAC;YACH,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,aAAa,EAAE,iBAAiB,CAAC,CAAC;YAC3D,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,aAAa,EAAE,iBAAiB,CAAC,SAAS,EAAE,CAAC,CAAC;YACrE,MAAM,CAAC,iBAAiB,CAAC;QAC3B,CAAC,CAAC;QAEF,EAAE,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;YACzB,MAAM,gBAAgB,CAAC,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC;gBAChF,aAAa,EAAE,aAAa;gBAC5B,SAAS,EAAE,kBAAkB,CAAC,IAAI,CAAC,UAAU,EAAE,aAAa,EAAE,UAAU,CAAC;gBACzE,aAAa,EAAE,QAAQ,CAAC,QAAQ,CAAC,aAAa;gBAC9C,QAAQ,EAAE,QAAQ,CAAC,QAAQ,CAAC,QAAQ;gBACpC,WAAW,EAAE,QAAQ,CAAC,QAAQ,CAAC,WAAW;gBAC1C,MAAM,EAAE,QAAQ,CAAC,QAAQ,CAAC,MAAM;gBAChC,SAAS,EAAE,QAAQ,CAAC,QAAQ,CAAC,SAAS;gBACtC,UAAU,EAAE,QAAQ,CAAC,QAAQ,CAAC,UAAU;gBACxC,aAAa,EAAE,QAAQ,CAAC,QAAQ,CAAC,aAAa;aAC/C,CAAC,CAAC;YACH,EAAE,CAAC,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC5B,uBAAuB,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;gBACjD,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACX,IAAI,CAAC,YAAY,CAAC,IAAI,0BAA0B,CAAC,aAAa,CAAC,EAAE,aAAa,CAAC,CAAC;oBAChF,MAAM,CAAC,IAAI,CAAC;gBACd,CAAC;gBACD,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;YAChE,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,YAAY;YACZ,uBAAuB,CAAC,IAAI,CAAC,CAAC;YAC9B,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IACH;;;OAGG;IACH,iCAAiC,CAAC,aAAkB;QAEhD,aAAa,GAAG,iBAAiB,CAAC,aAAa,CAAC,CAAC;QACjD,MAAM,gBAAgB,CAAC,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QAChF,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACb,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QACD,IAAI,gBAAgB,CAAC,6BAA0D,CAAC;QAEhF,EAAE,CAAC,CAAC,OAAO,YAAY,SAAS,CAAC,CAAC,CAAC;YACjC,YAAY;YACZ,oBAAoB,CAAC,QAAQ,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;YAC/C,oBAAoB,CAAC,WAAW,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC;YACrD,0BAA0B,CAAC,eAAe,EAAE,OAAO,CAAC,aAAa,CAAC,CAAC;YAEnE,MAAM,gBAAgB,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU;gBAClD,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;gBAC9D,IAAI,CAAC;YAET,6BAA6B,GAAG,IAAI,GAAG,CAAC,uBAAuB,CAAC;gBAC9D,aAAa,EAAE,OAAO,CAAC,aAAa;gBACpC,QAAQ,EAAE,OAAO,CAAC,QAAQ;gBAC1B,WAAW,EAAE,OAAO,CAAC,WAAW;gBAChC,MAAM,EAAE,OAAO,CAAC,MAAM;gBACtB,SAAS,EAAE,OAAO,CAAC,SAAS;gBAC5B,UAAU,EAAE,UAAU;gBACtB,aAAa,EAAE,OAAO,CAAC,aAAa;aACrC,CAAC,CAAC;QACL,CAAC;QAED,IAAI,gBAAgB,CAAC,uBAAuB,GAA4B,IAAI,CAAC;QAC7E,IAAI,gBAAgB,CAAC,aAAa,GAAkC,EAAE,CAAC;QACvE,IAAI,gBAAgB,CAAC,sBAAsB,GAAoC,EAAE,CAAC;QAClF,IAAI,gBAAgB,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QAEjD,EAAE,CAAC,CAAC,OAAO,YAAY,SAAS,CAAC,CAAC,CAAC;YACjC,YAAY;YACZ,uBAAuB,GAAG,OAAO,CAAC,eAAe,CAAC;YAClD,EAAE,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;gBAC1B,aAAa,GAAG,IAAI,CAAC,qBAAqB,CACtC,OAAO,CAAC,aAAa,EAAE,sBAAsB,EAC7C,sBAAsB,SAAS,CAAC,aAAa,CAAC,GAAG,EAAE,EAAE,EAAE,aAAa,CAAC,CAAC;YAC5E,CAAC;YACD,EAAE,CAAC,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;gBAC5B,sBAAsB,GAAG,qBAAqB,CAAC,OAAO,CAAC,eAAe,CAAC;qBACzC,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;qBAChD,MAAM,CAAC,sBAAsB,CAAC,CAAC;YAC/D,CAAC;YACD,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACd,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,8BAA8B,EAAE,CAAC;YACnE,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,YAAY;YACZ,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACd,IAAI,CAAC,YAAY,CACb,IAAI,KAAK,CAAC,aAAa,SAAS,CAAC,aAAa,CAAC,kCAAkC,CAAC,EAClF,aAAa,CAAC,CAAC;gBACnB,QAAQ,GAAG,OAAO,CAAC;YACrB,CAAC;QACH,CAAC;QAED,IAAI,gBAAgB,CAAC,SAAS,GAAkC,EAAE,CAAC;QACnE,EAAE,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACjC,SAAS,GAAG,IAAI,CAAC,qBAAqB,CAClC,OAAO,CAAC,SAAS,EAAE,sBAAsB,EAAE,kBAAkB,SAAS,CAAC,aAAa,CAAC,GAAG,EACxF,EAAE,EAAE,aAAa,CAAC,CAAC;QACzB,CAAC;QACD,IAAI,gBAAgB,CAAC,OAAO,GAA+B,EAAE,CAAC;QAC9D,IAAI,gBAAgB,CAAC,WAAW,GAA+B,EAAE,CAAC;QAClE,EAAE,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC/B,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,aAAa,CAAC,CAAC;YAC1E,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE,aAAa,CAAC,CAAC;QAC/E,CAAC;QAED,MAAM,gBAAgB,CAAC,QAAQ,GAAG,GAAG,CAAC,wBAAwB,CAAC,MAAM,CAAC;YACpE,QAAQ,EAAE,QAAQ;YAClB,QAAQ,EAAE,OAAO,CAAC,QAAQ;YAC1B,WAAW,EAAE,CAAC,CAAC,6BAA6B;YAC5C,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC;YAC1C,QAAQ,EAAE,6BAA6B;YACvC,eAAe,EAAE,uBAAuB;YACxC,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,OAAO,EAAE,OAAO,CAAC,OAAO;YACxB,IAAI,EAAE,OAAO,CAAC,IAAI;YAClB,SAAS,EAAE,SAAS;YACpB,aAAa,EAAE,aAAa;YAC5B,OAAO,EAAE,OAAO;YAChB,WAAW,EAAE,WAAW;YACxB,eAAe,EAAE,sBAAsB;SACxC,CAAC,CAAC;QACH,MAAM,CAAC,EAAC,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAC,CAAC;IACzC,CAAC;IACH;;;;;OAKG;IACH,oBAAoB,CAAC,aAAkB;QACnC,MAAM,gBAAgB,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QACzE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACb,IAAI,CAAC,YAAY,CACb,IAAI,KAAK,CACL,8HAA8H,SAAS,CAAC,aAAa,CAAC,GAAG,CAAC,EAC9J,aAAa,CAAC,CAAC;QACrB,CAAC;QACD,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IACH;;;OAGG;IACH,mBAAmB,CAAC,OAAY;QAC5B,MAAM,gBAAgB,CAAC,UAAU,GAAmB,CACnB,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,GAAG,CAAC,kBAAkB,CAAC,SAAS,CAAE,CAAC,CAAC;QAChG,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,YAAY,CACb,IAAI,KAAK,CACL,2DAA2D,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,EACrF,OAAO,CAAC,CAAC;QACf,CAAC;QACD,MAAM,CAAC,UAAU,CAAC;IACpB,CAAC;IACH;;;OAGG;IACH,WAAW,CAAC,IAAS,IAAI,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5E;;;OAGG;IACH,MAAM,CAAC,IAAS,IAAI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7D;;;OAGG;IACH,kBAAkB,CAAC,UAAe;QAC9B,IAAI,gBAAgB,CAAC,aAAa,GAAmB,CACrB,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,GAAG,CAAC,kBAAkB,CAAC,QAAQ,CAAE,CAAC,CAAC;QACjG,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YACnB,MAAM,gBAAgB,CAAC,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;YAChF,aAAa,GAAG,UAAU,GAAG,UAAU,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC;YAC3D,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;YACpD,CAAC;QACH,CAAC;QACD,MAAM,CAAC,aAAa,CAAC;IACvB,CAAC;IACH;;;;;;OAMG;IACH,oCAAoC,CAAC,UAAe,EAAE,MAAe,EAAE,eAAe,GAAG,IAAI;QAEzF,MAAM,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;QACxF,MAAM,gBAAgB,CAAC,OAAO,GAAmB,EAAE,CAAC;QACpD,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACb,QAAQ,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,EAAE;gBACrC,MAAM,gBAAgB,CAAC,OAAO,GAAG,IAAI,CAAC,sBAAsB,CAAC,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;gBACnF,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBACZ,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACxB,CAAC;YACH,CAAC,CAAC,CAAC;YACH,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;QAC/E,CAAC;QACD,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;IACH;;;;OAIG;IACH,mBAAmB,CAAC,UAAe,EAAE,eAAe,GAAG,IAAI;QACvD,UAAU,GAAG,iBAAiB,CAAC,UAAU,CAAC,CAAC;QAC3C,IAAI,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACvE,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,WAAW,CAAC;QACrB,CAAC;QACD,MAAM,gBAAgB,CAAC,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;QAC1F,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACV,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QACD,MAAM,gBAAgB,CAAC,kBAAkB,GAAoC,EAAE,CAAC;QAChF,MAAM,gBAAgB,CAAC,4BAA4B,GAAoC,EAAE,CAAC;QAC1F,MAAM,gBAAgB,CAAC,aAAa,GAAoC,EAAE,CAAC;QAC3E,MAAM,gBAAgB,CAAC,eAAe,GAAiC,EAAE,CAAC;QAC1E,MAAM,gBAAgB,CAAC,eAAe,GAAiC,EAAE,CAAC;QAC1E,MAAM,gBAAgB,CAAC,SAAS,GAAkC,EAAE,CAAC;QACrE,MAAM,gBAAgB,CAAC,eAAe,GAAoC,EAAE,CAAC;QAC7E,MAAM,gBAAgB,CAAC,mBAAmB,GAAoC,EAAE,CAAC;QACjF,MAAM,gBAAgB,CAAC,OAAO,GAAqB,EAAE,CAAC;QAEtD,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACjB,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,YAAY;gBACvD,IAAI,gBAAgB,CAAC,kBAA6B,CAAC;gBACnD,EAAE,CAAC,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;oBAC9B,kBAAkB,GAAG,YAAY,CAAC;gBACpC,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,YAAY,IAAI,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACjD,MAAM,gBAAgB,CAAC,mBAAmB,GAAwB,YAAY,CAAC;oBAC/E,kBAAkB,GAAG,mBAAmB,CAAC,QAAQ,CAAC;oBAClD,EAAE,CAAC,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,CAAC;wBAClC,SAAS,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,qBAAqB,CACxC,mBAAmB,CAAC,SAAS,EAAE,eAAe,EAC9C,8BAA8B,SAAS,CAAC,kBAAkB,CAAC,GAAG,EAAE,EAAE,EAAE,YAAY,CAAC,CAAC,CAAC;oBACzF,CAAC;gBACH,CAAC;gBAED,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;oBACvB,MAAM,gBAAgB,CAAC,qBAAqB,GAAG,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,CAAC;oBAC3F,EAAE,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC;wBAC3B,IAAI,CAAC,YAAY,CACb,IAAI,KAAK,CACL,cAAc,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,KAAK,SAAS,CAAC,YAAY,CAAC,6BAA6B,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,EACzI,UAAU,CAAC,CAAC;wBAChB,MAAM,CAAC;oBACT,CAAC;oBACD,eAAe,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;gBAC9C,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,IAAI,CAAC,YAAY,CACb,IAAI,KAAK,CACL,qBAAqB,SAAS,CAAC,YAAY,CAAC,6BAA6B,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,EACtG,UAAU,CAAC,CAAC;oBAChB,MAAM,CAAC;gBACT,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACjB,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,YAAY;gBACvD,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;oBAC/B,IAAI,CAAC,YAAY,CACb,IAAI,KAAK,CACL,qBAAqB,SAAS,CAAC,YAAY,CAAC,6BAA6B,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,EACtG,UAAU,CAAC,CAAC;oBAChB,MAAM,CAAC;gBACT,CAAC;gBACD,MAAM,gBAAgB,CAAC,qBAAqB,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;gBACrF,EAAE,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC;oBAC1B,eAAe,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;gBAC9C,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,4BAA4B,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC,CAAC,CAAC;gBAC/E,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,mDAAmD;QACnD,qCAAqC;QACrC,MAAM,gBAAgB,CAAC,gBAAgB,GAAG,IAAI,CAAC,8BAA8B,CAAC,eAAe,EAAE,eAAe,CAAC,CAAC;QAChH,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACtB,qBAAqB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,CAAC,YAAY;gBAC5D,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;oBAC/B,IAAI,CAAC,YAAY,CACb,IAAI,KAAK,CACL,qBAAqB,SAAS,CAAC,YAAY,CAAC,6BAA6B,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,EACtG,UAAU,CAAC,CAAC;oBAChB,MAAM,CAAC;gBACT,CAAC;gBACD,MAAM,gBAAgB,CAAC,kBAAkB,GAAG,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC,CAAC;gBACtF,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;oBACtD,gBAAgB,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;oBAClD,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;oBAC5C,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;gBAClD,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;oBACnD,gBAAgB,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;oBAC7C,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;oBAChD,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;oBACvC,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;gBAClD,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,IAAI,CAAC,YAAY,CACb,IAAI,KAAK,CACL,cAAc,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,KAAK,SAAS,CAAC,YAAY,CAAC,6BAA6B,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,EACzI,UAAU,CAAC,CAAC;oBAChB,MAAM,CAAC;gBACT,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,MAAM,gBAAgB,CAAC,kBAAkB,GAAoC,EAAE,CAAC;QAChF,MAAM,gBAAgB,CAAC,aAAa,GAAoC,EAAE,CAAC;QAC3E,4BAA4B,CAAC,OAAO,CAAC,CAAC,UAAU;YAC9C,EAAE,CAAC,CAAC,gBAAgB,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAC7D,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACpC,gBAAgB,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC;YACpD,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,gBAAgB,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAC/D,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC/B,gBAAgB,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;YAC/C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,YAAY,CACb,IAAI,KAAK,CACL,gBAAgB,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,SAAS,CAAC,UAAU,CAAC,2CAA2C,CAAC,EAC9K,UAAU,CAAC,CAAC;YAClB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,8CAA8C;QAC9C,8DAA8D;QAC9D,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACnB,SAAS,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,qBAAqB,CACxC,IAAI,CAAC,SAAS,EAAE,eAAe,EAAE,8BAA8B,SAAS,CAAC,UAAU,CAAC,GAAG,EACvF,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC;QACvB,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;YACzB,eAAe,CAAC,IAAI,CAChB,GAAG,qBAAqB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC/F,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACnB,qBAAqB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,IAAI;gBAChD,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACvB,IAAI,CAAC,YAAY,CACb,IAAI,KAAK,CACL,qBAAqB,SAAS,CAAC,IAAI,CAAC,+CAA+C,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,EAChH,UAAU,CAAC,CAAC;oBAChB,MAAM,CAAC;gBACT,CAAC;gBACD,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;YACxD,CAAC,CAAC,CAAC;QACL,CAAC;QAED,eAAe,CAAC,IAAI,CAAC,GAAG,mBAAmB,CAAC,CAAC;QAE7C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACjB,OAAO,CAAC,IAAI,CAAC,GAAG,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QACvD,CAAC;QAED,WAAW,GAAG,IAAI,GAAG,CAAC,uBAAuB,CAAC;YAC5C,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC;YACvC,SAAS;YACT,eAAe;YACf,mBAAmB;YACnB,OAAO;YACP,kBAAkB;YAClB,kBAAkB;YAClB,aAAa;YACb,aAAa;YACb,eAAe;YACf,eAAe;YACf,gBAAgB;YAChB,EAAE,EAAE,IAAI,CAAC,EAAE;SACZ,CAAC,CAAC;QAEH,eAAe,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK,gBAAgB,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC;QACxE,SAAS,CAAC,OAAO,CAAC,CAAC,QAAQ,KAAK,gBAAgB,CAAC,WAAW,CAAC,QAAQ,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;QAC1F,gBAAgB,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;QACjD,MAAM,CAAC,WAAW,CAAC;IACrB,CAAC;IACH;;;OAGG;IACK,kBAAkB,CAAC,IAAe;QACtC,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC9C,MAAM,CAAC,WAAW,CAAC;QACrB,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACpC,MAAM,CAAC,MAAM,CAAC;QAChB,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC5C,MAAM,CAAC,QAAQ,CAAC;QAClB,CAAC;QAED,EAAE,CAAC,CAAC,CAAkB,CAAE,IAAY,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,UAAU,CAAC;QACpB,CAAC;QAED,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IACH;;;;OAIG;IACK,gBAAgB,CAAC,IAAe,EAAE,UAAqB;QAC3D,MAAM,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACnE,EAAE,CAAC,CAAC,SAAS,IAAI,SAAS,KAAK,UAAU,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,YAAY,CACb,IAAI,KAAK,CACL,QAAQ,SAAS,CAAC,IAAI,CAAC,8CAA8C,SAAS,CAAC,SAAS,CAAC,QAAQ,SAAS,CAAC,UAAU,CAAC,IAAI;gBAC1H,0BAA0B,SAAS,CAAC,IAAI,CAAC,oCAAoC,SAAS,CAAC,SAAS,CAAC,QAAQ,SAAS,CAAC,UAAU,CAAC,IAAI;gBAClI,gEAAgE,SAAS,CAAC,IAAI,CAAC,iCAAiC,SAAS,CAAC,SAAS,CAAC,QAAQ,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,EACzK,UAAU,CAAC,CAAC;QAClB,CAAC;QACD,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IAC9C,CAAC;IACH;;;;OAIG;IACK,8BAA8B,CAChC,eAA6C,EAC7C,eAA6C;QAC/C,qFAAqF;QACrF,MAAM,gBAAgB,CAAC,MAAM,GAAG,IAAI,GAAG,CAAC,iCAAiC,EAAE,CAAC;QAC5E,MAAM,gBAAgB,CAAC,cAAc,GAAG,IAAI,GAAG,EAAiB,CAAC;QACjE,eAAe,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,CAAC,UAAU;YACzD,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YAC3D,UAAU,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;YAC7E,MAAM,gBAAgB,CAAC,WAAW,GAAG,IAAI,GAAG,EAAO,CAAC;YACpD,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK;gBACjC,MAAM,gBAAgB,CAAC,QAAQ,GAAG,GAAG,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAC3E,IAAI,gBAAgB,CAAC,WAAW,GAAG,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBAChE,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;oBACjB,WAAW,GAAG,IAAI,GAAG,EAAO,CAAC;oBAC7B,cAAc,CAAC,GAAG,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;gBAC5C,CAAC;gBACD,MAAM,gBAAgB,CAAC,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC;gBAC1D,yEAAyE;gBACzE,uEAAuE;gBACvE,EAAE,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;oBAC7D,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;oBAC3B,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBAC1B,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;gBACnD,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,eAAe,CAAC,OAAO,CAAC,CAAC,UAAU;YACjC,UAAU,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK,MAAM,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC,CAAC;YAC/E,UAAU,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK,MAAM,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC;QACH,eAAe,CAAC,OAAO,CAAC,CAAC,UAAU;YACjC,UAAU,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;YACvE,UAAU,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IACH;;;OAGG;IACK,sBAAsB,CAAC,IAAe;QAC1C,IAAI,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;QAC/B,MAAM,CAAC,EAAC,SAAS,EAAE,IAAI,EAAC,CAAC;IAC3B,CAAC;IACH;;;;OAIG;IACK,gBAAgB,CAAC,IAAe,EAAE,YAAY,GAAU,IAAI;QAChE,MAAM,gBAAgB,CAAC,UAAU,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;QACtE,MAAM,CAAC;YACL,SAAS,EAAE,UAAU,CAAC,SAAS;YAC/B,MAAM,EAAE,IAAI,CAAC,wBAAwB,CAAC,UAAU,CAAC,SAAS,EAAE,YAAY,CAAC;YACzE,cAAc,EACV,sBAAsB,CAAC,MAAM,CAAC,IAAI,IAAI,gBAAgB,CAAC,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC;SACxF,CAAC;IACJ,CAAC;IACH;;;;OAIG;IACK,mBAAmB,CAAC,OAAiB,EAAE,YAAY,GAAU,IAAI;QAErE,OAAO,GAAG,iBAAiB,CAAC,OAAO,CAAC,CAAC;QACrC,MAAM,CAAC,EAAC,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,wBAAwB,CAAC,OAAO,EAAE,YAAY,CAAC,EAAC,CAAC;IAC5F,CAAC;IACH;;;;;OAKG;IACH,eAAe,CAAC,QAAa;QACzB,MAAM,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAChE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,YAAY,CACb,IAAI,KAAK,CACL,oHAAoH,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,EAC/I,QAAQ,CAAC,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,QAAQ,CAAC;IAClB,CAAC;IACH;;;OAGG;IACH,cAAc,CAAC,QAAa;QACxB,MAAM,gBAAgB,CAAC,WAAW,GAAmB,CACzB,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAE,CAAC,CAAC;QACvF,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,YAAY,CACb,IAAI,KAAK,CAAC,sDAAsD,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,EACvF,QAAQ,CAAC,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,WAAW,CAAC;IACrB,CAAC;IACH;;;OAGG;IACH,qBAAqB,CAAC,QAAa;QAC/B,IAAI,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC9D,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACd,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QAC9C,CAAC;QACD,MAAM,CAAC,QAAQ,CAAC;IAClB,CAAC;IACH;;;OAGG;IACK,iBAAiB,CAAC,QAAa;QACnC,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QACvC,MAAM,gBAAgB,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAE7E,MAAM,gBAAgB,CAAC,QAAQ,GAAG,IAAI,GAAG,CAAC,mBAAmB,CAAC;YAC5D,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC;YACrC,IAAI,EAAE,cAAc,CAAC,IAAI;YACzB,IAAI,EAAE,cAAc,CAAC,IAAI;SAC1B,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACxC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,SAAS,EAAE,CAAC,CAAC;QACvD,MAAM,CAAC,QAAQ,CAAC;IAClB,CAAC;IACH;;;;OAIG;IACK,wBAAwB,CAAC,UAA8B,EAAE,YAAmB;QAEhF,IAAI,gBAAgB,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5C,MAAM,gBAAgB,CAAC,MAAM,GAAG,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;QAE7F,MAAM,gBAAgB,CAAC,oBAAoB,GAAsC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK;YAChG,IAAI,gBAAgB,CAAC,WAAW,GAAG,KAAK,CAAC;YACzC,IAAI,gBAAgB,CAAC,MAAM,GAAG,KAAK,CAAC;YACpC,IAAI,gBAAgB,CAAC,MAAM,GAAG,KAAK,CAAC;YACpC,IAAI,gBAAgB,CAAC,UAAU,GAAG,KAAK,CAAC;YACxC,IAAI,gBAAgB,CAAC,UAAU,GAAG,KAAK,CAAC;YACxC,IAAI,gBAAgB,CAAC,KAAK,GAAQ,IAAI,CAAC;YACvC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzB,KAAK,CAAC,OAAO,CAAC,CAAC,UAAU;oBACvB,EAAE,CAAC,CAAC,UAAU,YAAY,IAAI,CAAC,CAAC,CAAC;wBAC/B,MAAM,GAAG,IAAI,CAAC;oBAChB,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,YAAY,IAAI,CAAC,CAAC,CAAC;wBACtC,MAAM,GAAG,IAAI,CAAC;oBAChB,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,YAAY,QAAQ,CAAC,CAAC,CAAC;wBAC1C,UAAU,GAAG,IAAI,CAAC;oBACpB,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,YAAY,QAAQ,CAAC,CAAC,CAAC;wBAC1C,UAAU,GAAG,IAAI,CAAC;oBACpB,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,YAAY,SAAS,CAAC,CAAC,CAAC;wBAC3C,WAAW,GAAG,IAAI,CAAC;wBACnB,KAAK,GAAG,UAAU,CAAC,aAAa,CAAC;oBACnC,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,YAAY,MAAM,CAAC,CAAC,CAAC;wBACxC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;oBAC3B,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACrD,KAAK,GAAG,UAAU,CAAC;oBACrB,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAK,GAAG,KAAK,CAAC;YAChB,CAAC;YACD,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACnB,cAAc,GAAG,IAAI,CAAC;gBACtB,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;YAED,MAAM,CAAC;gBACL,WAAW;gBACX,MAAM;gBACN,MAAM;gBACN,UAAU;gBACV,UAAU;gBACV,KAAK,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;aACrC,CAAC;QAEJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;YACnB,MAAM,gBAAgB,CAAC,UAAU,GAC7B,oBAAoB,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACnF,IAAI,CAAC,YAAY,CACb,IAAI,KAAK,CAAC,oCAAoC,SAAS,CAAC,UAAU,CAAC,MAAM,UAAU,IAAI,CAAC,EACxF,UAAU,CAAC,CAAC;QAClB,CAAC;QAED,MAAM,CAAC,oBAAoB,CAAC;IAC9B,CAAC;IACH;;;OAGG;IACK,iBAAiB,CAAC,KAAU;QAChC,KAAK,GAAG,iBAAiB,CAAC,KAAK,CAAC,CAAC;QACjC,IAAI,gBAAgB,CAAC,YAAsC,CAAC;QAC5D,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC9B,YAAY,GAAG,EAAC,KAAK,EAAE,KAAK,EAAC,CAAC;QAChC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,YAAY,GAAG,EAAC,UAAU,EAAE,EAAC,SAAS,EAAE,KAAK,EAAC,EAAC,CAAC;QAClD,CAAC;QACD,MAAM,CAAC,YAAY,CAAC;IACtB,CAAC;IACH;;;;;;;OAOG;IACK,qBAAqB,CACvB,SAAqB,EAAE,qBAAsD,EAC7E,SAAkB,EAAE,gBAAgB,GAAkC,EAAE,EACxE,IAAU;QACZ,SAAS,CAAC,OAAO,CAAC,CAAC,QAAa,EAAE,WAAmB;YACnD,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAC5B,IAAI,CAAC,qBAAqB,CAAC,QAAQ,EAAE,qBAAqB,EAAE,SAAS,EAAE,gBAAgB,CAAC,CAAC;YAC3F,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,CAAC,CAAC;gBACvC,IAAI,gBAAgB,CAAC,YAA8B,CAAC;gBACpD,EAAE,CAAC,CAAC,QAAQ,IAAI,OAAO,QAAQ,IAAI,QAAQ,IAAI,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;oBAClF,YAAY,GAAG,IAAI,GAAG,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;gBAClE,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACjC,YAAY,GAAG,IAAI,GAAG,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAC,QAAQ,EAAE,QAAQ,EAAC,CAAC,CAAC;gBACtE,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,MAAM,gBAAgB,CAAC,aAAa,GAChC,CAAkB,CAAY,SAAS,CAAC,MAAM,CACzC,CAAC,KAAe,EAAE,YAAiB,EAAE,eAAuB;wBAC1D,EAAE,CAAC,CAAC,eAAe,GAAG,WAAW,CAAC,CAAC,CAAC;4BAClC,KAAK,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;wBAC3C,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,eAAe,IAAI,WAAW,CAAC,CAAC,CAAC;4BAC1C,KAAK,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;wBAC7C,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,eAAe,IAAI,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;4BAC9C,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACpB,CAAC;wBACD,MAAM,CAAC,KAAK,CAAC;oBACf,CAAC,EACD,EAAE,CAAE,CAAC,CAAC;yBACN,IAAI,CAAC,IAAI,CAAC,CAAC;oBACpB,IAAI,CAAC,YAAY,CACb,IAAI,KAAK,CACL,WAAW,SAAS,GAAG,SAAS,GAAG,UAAU,6DAA6D,aAAa,GAAG,CAAC,EAC/H,IAAI,CAAC,CAAC;gBACZ,CAAC;gBACD,EAAE,CAAC,CAAC,YAAY,CAAC,KAAK,KAAK,iBAAiB,CAAC,WAAW,CAAC,4BAA4B,CAAC,CAAC,CAAC,CAAC;oBACvF,qBAAqB,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,+BAA+B,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC;gBAC1F,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC,CAAC;gBAChE,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,gBAAgB,CAAC;IAC1B,CAAC;IACH;;;;OAIG;IACK,+BAA+B,CAAC,QAA0B,EAAE,IAAU;QAE1E,MAAM,gBAAgB,CAAC,UAAU,GAAoC,EAAE,CAAC;QACxE,MAAM,gBAAgB,CAAC,oBAAoB,GAAoC,EAAE,CAAC;QAElF,EAAE,CAAC,CAAC,QAAQ,CAAC,UAAU,IAAI,QAAQ,CAAC,WAAW,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;YACrE,IAAI,CAAC,YAAY,CACb,IAAI,KAAK,CAAC,gEAAgE,CAAC,EAAE,IAAI,CAAC,CAAC;YACvF,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,YAAY,CACb,IAAI,KAAK,CAAC,sEAAsE,CAAC,EAAE,IAAI,CAAC,CAAC;YAC7F,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;QAED,kBAAkB,CAAC,QAAQ,CAAC,QAAQ,EAAE,oBAAoB,CAAC,CAAC;QAC5D,oBAAoB,CAAC,OAAO,CAAC,CAAC,UAAU;YACtC,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAC9D,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC9B,CAAC;QACH,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,UAAU,CAAC;IACpB,CAAC;IACH;;;OAGG;IACH,mBAAmB,CAAC,QAA0B;QAC1C,IAAI,gBAAgB,CAAC,WAA8C,CAAC;QACpE,IAAI,gBAAgB,CAAC,mBAAmB,GAA4B,IAAI,CAAC;QACzE,IAAI,gBAAgB,CAAC,sBAAsB,GAA+B,IAAI,CAAC;QAC/E,IAAI,gBAAgB,CAAC,KAAK,GAA6B,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAE9F,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;YACtB,mBAAmB,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,YAAY,CAAC,CAAC;YACtF,WAAW,GAAG,mBAAmB,CAAC,MAAM,CAAC;YACzC,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,KAAK,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACzC,iFAAiF;gBACjF,KAAK,GAAG,EAAC,UAAU,EAAE,mBAAmB,EAAC,CAAC;YAC5C,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;YAC/B,sBAAsB,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,YAAY,CAAC,CAAC;YAC9F,WAAW,GAAG,sBAAsB,CAAC,MAAM,CAAC;QAC9C,CAAC;QAED,MAAM,CAAC;YACL,KAAK,EAAE,KAAK;YACZ,QAAQ,EAAE,mBAAmB;YAC7B,QAAQ,EAAE,QAAQ,CAAC,QAAQ;YAC3B,UAAU,EAAE,sBAAsB;YAClC,WAAW,EAAE,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,IAAI;YACvF,IAAI,EAAE,WAAW;YACjB,KAAK,EAAE,QAAQ,CAAC,KAAK;SACtB,CAAC;IACJ,CAAC;IACH;;;;;OAKG;IACK,mBAAmB,CACrB,OAA+B,EAAE,WAAoB,EACrD,aAAwB;QAC1B,MAAM,gBAAgB,CAAC,GAAG,GAA+B,EAAE,CAAC;QAE5D,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,YAAoB;YAChD,MAAM,gBAAgB,CAAC,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;YACrD,EAAE,CAAC,CAAC,KAAK,CAAC,WAAW,KAAK,WAAW,CAAC,CAAC,CAAC;gBACtC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,YAAY,EAAE,aAAa,CAAC,CAAC,CAAC;YACvE,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;IACH;;;OAGG;IACK,iBAAiB,CAAC,QAAa,IAAc,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IACxF;;;;;OAKG;IACK,iBAAiB,CAAC,CAAQ,EAAE,YAAoB,EAAE,UAA8B;QAEpF,IAAI,gBAAgB,CAAC,SAAqC,CAAC;QAC3D,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC;YACnC,SAAS;gBACL,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,OAAO,IAAI,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC;QACzF,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAChB,IAAI,CAAC,YAAY,CACb,IAAI,KAAK,CACL,6CAA6C,YAAY,SAAS,SAAS,CAAC,UAAU,CAAC,4CAA4C,CAAC,EACxI,UAAU,CAAC,CAAC;YAClB,CAAC;YACD,SAAS,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnD,CAAC;QAED,MAAM,CAAC;YACL,SAAS;YACT,KAAK,EAAE,CAAC,CAAC,KAAK;YACd,WAAW,EAAE,CAAC,CAAC,WAAW,EAAE,YAAY;YACxC,IAAI,EAAE,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI;SACrD,CAAC;IACJ,CAAC;IACH;;;;;OAKG;IACK,YAAY,CAAC,KAAU,EAAE,IAAU,EAAE,SAAe;QACxD,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YAClC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACd,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;YACzC,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;AAeH,CAAC;AAdM,kCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,sCAAc,GAAmE,MAAM;IAC9F,EAAC,IAAI,EAAE,gBAAgB,GAAG;IAC1B,EAAC,IAAI,EAAE,iBAAiB,GAAG;IAC3B,EAAC,IAAI,EAAE,YAAY,GAAG;IACtB,EAAC,IAAI,EAAE,eAAe,GAAG;IACzB,EAAC,IAAI,EAAE,qBAAqB,GAAG;IAC/B,EAAC,IAAI,EAAE,mBAAmB,GAAG;IAC7B,EAAC,IAAI,EAAE,eAAe,GAAG;IACzB,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,qBAAqB,EAAG,EAAE,EAAG,EAAC;CACvG,CACA;AAED;IACA,gBAAgB;IAChB,uBAAuB,CAAC,UAAU,CAAC;IACnC;;;OAGG;IACH,uBAAuB,CAAC,cAAc,CAAC;IACvC,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,eAAe,CAAC;IAClD,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,aAAa,CAAC;IAChD,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,UAAU,CAAC;IAC7C,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,cAAc,CAAC;IACjD,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,gBAAgB,CAAC;IACnD,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,iBAAiB,CAAC;IACpD,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,kBAAkB,CAAC;IACrD,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,aAAa,CAAC;IAChD,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,gBAAgB,CAAC;IACnD,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,eAAe,CAAC;IAClD,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,oBAAoB,CAAC;IACvD,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,UAAU,CAAC;IAC7C,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,eAAe,CAAC;AAClD,CAAC;AAED;;;;GAIG;AACH,sBAAsB,IAAW,EAAE,GAAG,GAAe,EAAE;IACrD,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QACT,GAAG,CAAC,CAAC,IAAI,gBAAgB,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACtD,MAAM,gBAAgB,CAAC,IAAI,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACzD,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACxB,YAAY,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YAC1B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjB,CAAC;QACH,CAAC;IACH,CAAC;IACD,MAAM,CAAC,GAAG,CAAC;AACb,CAAC;AACD;;;GAGG;AACH,qBAAqB,KAAY;IAC/B,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACV,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;IACD,MAAM,CAAC,EAAE,CAAC;AACZ,CAAC;AACD;;;GAGG;AACH,+BAA+B,IAAW;IACxC,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;AACzC,CAAC;AACD;;;GAGG;AACH,qBAAqB,KAAU;IAC7B,MAAM,CAAC,CAAC,KAAK,YAAY,YAAY,CAAC,IAAI,CAAC,KAAK,YAAY,IAAI,CAAC,CAAC;AACpE,CAAC;AACD;;;;;GAKG;AACH,mCACI,SAA0B,EAAE,IAAe,EAAE,WAAsB;IACrE,EAAE,CAAC,CAAC,IAAI,YAAY,YAAY,CAAC,CAAC,CAAC;QACjC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,MAAM,gBAAgB,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;IAEvD,EAAE,CAAC,CAAC,OAAO,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC;QACjC,MAAM,gBAAgB,CAAC,MAAM,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC;QACvD,MAAM,CAAC,MAAM,GAAG,QAAQ,GAAG,WAAW,QAAQ,GAAG,aAAa,EAAE,CAAC;IACnE,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;QACpD,MAAM,IAAI,KAAK,CACX,mCAAmC,SAAS,CAAC,IAAI,CAAC,sDAAsD;YACxG,mGAAmG,CAAC,CAAC;IAC3G,CAAC;IAED,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AACnC,CAAC;AACD;;;;GAIG;AACH,4BAA4B,KAAU,EAAE,iBAAkD;IACxF,UAAU,CAAC,KAAK,EAAE,IAAI,sBAAsB,EAAE,EAAE,iBAAiB,CAAC,CAAC;AACrE,CAAC;AACD,qCAAqC,gBAAgB;IACrD;;;;OAIG;IACH,UAAU,CAAC,KAAU,EAAE,iBAAkD;QACrE,iBAAiB,CAAC,IAAI,CAAC,EAAC,SAAS,EAAE,KAAK,EAAC,CAAC,CAAC;IAC7C,CAAC;AACH,CAAC;AAAA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationAnimateMetadata, AnimationEntryMetadata, AnimationGroupMetadata, AnimationKeyframesSequenceMetadata, AnimationMetadata, AnimationStateDeclarationMetadata, AnimationStateMetadata, AnimationStateTransitionMetadata, AnimationStyleMetadata, AnimationWithStepsMetadata, Attribute, ChangeDetectionStrategy, Component, Directive, Host, Inject, Injectable, ModuleWithProviders, OpaqueToken, Optional, Provider, Query, SchemaMetadata, Self, SkipSelf, Type, resolveForwardRef} from '@angular/core/index';\n\nimport {StaticSymbol} from './aot/static_symbol';\nimport {assertArrayOfStrings, assertInterpolationSymbols} from './assertions';\nimport * as cpl from './compile_metadata';\nimport {DirectiveNormalizer} from './directive_normalizer';\nimport {DirectiveResolver} from './directive_resolver';\nimport {ListWrapper, StringMapWrapper} from './facade/collection';\nimport {isBlank, isPresent, stringify} from './facade/lang';\nimport {Identifiers, createIdentifierToken, resolveIdentifier} from './identifiers';\nimport {hasLifecycleHook} from './lifecycle_reflector';\nimport {NgModuleResolver} from './ng_module_resolver';\nimport {PipeResolver} from './pipe_resolver';\nimport {ComponentStillLoadingError, LIFECYCLE_HOOKS_VALUES, ReflectorReader, reflector} from './private_import_core';\nimport {ElementSchemaRegistry} from './schema/element_schema_registry';\nimport {SummaryResolver} from './summary_resolver';\nimport {getUrlScheme} from './url_resolver';\nimport {MODULE_SUFFIX, SyncAsyncResult, ValueTransformer, visitValue} from './util';\n\nexport type ErrorCollector = (error: any, type?: any) => void;\nexport const /** @type {?} */ ERROR_COLLECTOR_TOKEN = new OpaqueToken('ErrorCollector');\nexport class CompileMetadataResolver {\nprivate _directiveCache = new Map<Type<any>, cpl.CompileDirectiveMetadata>();\nprivate _summaryCache = new Map<Type<any>, cpl.CompileTypeSummary>();\nprivate _pipeCache = new Map<Type<any>, cpl.CompilePipeMetadata>();\nprivate _ngModuleCache = new Map<Type<any>, cpl.CompileNgModuleMetadata>();\nprivate _ngModuleOfTypes = new Map<Type<any>, Type<any>>();\n/**\n * @param {?} _ngModuleResolver\n * @param {?} _directiveResolver\n * @param {?} _pipeResolver\n * @param {?} _summaryResolver\n * @param {?} _schemaRegistry\n * @param {?} _directiveNormalizer\n * @param {?=} _reflector\n * @param {?=} _errorCollector\n */\nconstructor(\nprivate _ngModuleResolver: NgModuleResolver,\nprivate _directiveResolver: DirectiveResolver,\nprivate _pipeResolver: PipeResolver,\nprivate _summaryResolver: SummaryResolver,\nprivate _schemaRegistry: ElementSchemaRegistry,\nprivate _directiveNormalizer: DirectiveNormalizer,\nprivate _reflector: ReflectorReader = reflector,\nprivate _errorCollector?: ErrorCollector) {}\n/**\n * @param {?} type\n * @return {?}\n */\nclearCacheFor(type: Type<any>) {\n    const /** @type {?} */ dirMeta = this._directiveCache.get(type);\n    this._directiveCache.delete(type);\n    this._summaryCache.delete(type);\n    this._pipeCache.delete(type);\n    this._ngModuleOfTypes.delete(type);\n    // Clear all of the NgModule as they contain transitive information!\n    this._ngModuleCache.clear();\n    if (dirMeta) {\n      this._directiveNormalizer.clearCacheFor(dirMeta);\n    }\n  }\n/**\n * @return {?}\n */\nclearCache() {\n    this._directiveCache.clear();\n    this._summaryCache.clear();\n    this._pipeCache.clear();\n    this._ngModuleCache.clear();\n    this._ngModuleOfTypes.clear();\n    this._directiveNormalizer.clearCache();\n  }\n/**\n * @param {?} entry\n * @return {?}\n */\ngetAnimationEntryMetadata(entry: AnimationEntryMetadata): cpl.CompileAnimationEntryMetadata {\n    const /** @type {?} */ defs = entry.definitions.map(def => this._getAnimationStateMetadata(def));\n    return new cpl.CompileAnimationEntryMetadata(entry.name, defs);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate _getAnimationStateMetadata(value: AnimationStateMetadata):\n      cpl.CompileAnimationStateMetadata {\n    if (value instanceof AnimationStateDeclarationMetadata) {\n      const /** @type {?} */ styles = this._getAnimationStyleMetadata(value.styles);\n      return new cpl.CompileAnimationStateDeclarationMetadata(value.stateNameExpr, styles);\n    }\n\n    if (value instanceof AnimationStateTransitionMetadata) {\n      return new cpl.CompileAnimationStateTransitionMetadata(\n          value.stateChangeExpr, this._getAnimationMetadata(value.steps));\n    }\n\n    return null;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate _getAnimationStyleMetadata(value: AnimationStyleMetadata):\n      cpl.CompileAnimationStyleMetadata {\n    return new cpl.CompileAnimationStyleMetadata(value.offset, value.styles);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate _getAnimationMetadata(value: AnimationMetadata): cpl.CompileAnimationMetadata {\n    if (value instanceof AnimationStyleMetadata) {\n      return this._getAnimationStyleMetadata(value);\n    }\n\n    if (value instanceof AnimationKeyframesSequenceMetadata) {\n      return new cpl.CompileAnimationKeyframesSequenceMetadata(\n          value.steps.map(entry => this._getAnimationStyleMetadata(entry)));\n    }\n\n    if (value instanceof AnimationAnimateMetadata) {\n      const /** @type {?} */ animateData = /** @type {?} */((\n          <cpl.CompileAnimationStyleMetadata|cpl.CompileAnimationKeyframesSequenceMetadata>this\n              ._getAnimationMetadata(value.styles)));\n      return new cpl.CompileAnimationAnimateMetadata(value.timings, animateData);\n    }\n\n    if (value instanceof AnimationWithStepsMetadata) {\n      const /** @type {?} */ steps = value.steps.map(step => this._getAnimationMetadata(step));\n\n      if (value instanceof AnimationGroupMetadata) {\n        return new cpl.CompileAnimationGroupMetadata(steps);\n      }\n\n      return new cpl.CompileAnimationSequenceMetadata(steps);\n    }\n    return null;\n  }\n/**\n * @param {?} type\n * @param {?} kind\n * @return {?}\n */\nprivate _loadSummary(type: any, kind: cpl.CompileSummaryKind): cpl.CompileTypeSummary {\n    let /** @type {?} */ summary = this._summaryCache.get(type);\n    if (!summary) {\n      summary = this._summaryResolver.resolveSummary(type);\n      this._summaryCache.set(type, summary);\n    }\n    return summary && summary.summaryKind === kind ? summary : null;\n  }\n/**\n * @param {?} directiveType\n * @param {?} isSync\n * @return {?}\n */\nprivate _loadDirectiveMetadata(directiveType: any, isSync: boolean): Promise<any> {\n    if (this._directiveCache.has(directiveType)) {\n      return;\n    }\n    directiveType = resolveForwardRef(directiveType);\n    const {annotation, metadata} = this.getNonNormalizedDirectiveMetadata(directiveType);\n\n    const /** @type {?} */ createDirectiveMetadata = (templateMetadata: cpl.CompileTemplateMetadata) => {\n      const /** @type {?} */ normalizedDirMeta = new cpl.CompileDirectiveMetadata({\n        type: metadata.type,\n        isComponent: metadata.isComponent,\n        selector: metadata.selector,\n        exportAs: metadata.exportAs,\n        changeDetection: metadata.changeDetection,\n        inputs: metadata.inputs,\n        outputs: metadata.outputs,\n        hostListeners: metadata.hostListeners,\n        hostProperties: metadata.hostProperties,\n        hostAttributes: metadata.hostAttributes,\n        providers: metadata.providers,\n        viewProviders: metadata.viewProviders,\n        queries: metadata.queries,\n        viewQueries: metadata.viewQueries,\n        entryComponents: metadata.entryComponents,\n        template: templateMetadata\n      });\n      this._directiveCache.set(directiveType, normalizedDirMeta);\n      this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n      return normalizedDirMeta;\n    };\n\n    if (metadata.isComponent) {\n      const /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n        componentType: directiveType,\n        moduleUrl: componentModuleUrl(this._reflector, directiveType, annotation),\n        encapsulation: metadata.template.encapsulation,\n        template: metadata.template.template,\n        templateUrl: metadata.template.templateUrl,\n        styles: metadata.template.styles,\n        styleUrls: metadata.template.styleUrls,\n        animations: metadata.template.animations,\n        interpolation: metadata.template.interpolation\n      });\n      if (templateMeta.syncResult) {\n        createDirectiveMetadata(templateMeta.syncResult);\n        return null;\n      } else {\n        if (isSync) {\n          this._reportError(new ComponentStillLoadingError(directiveType), directiveType);\n          return null;\n        }\n        return templateMeta.asyncResult.then(createDirectiveMetadata);\n      }\n    } else {\n      // directive\n      createDirectiveMetadata(null);\n      return null;\n    }\n  }\n/**\n * @param {?} directiveType\n * @return {?}\n */\ngetNonNormalizedDirectiveMetadata(directiveType: any):\n      {annotation: Directive, metadata: cpl.CompileDirectiveMetadata} {\n    directiveType = resolveForwardRef(directiveType);\n    const /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType);\n    if (!dirMeta) {\n      return null;\n    }\n    let /** @type {?} */ nonNormalizedTemplateMetadata: cpl.CompileTemplateMetadata;\n\n    if (dirMeta instanceof Component) {\n      // component\n      assertArrayOfStrings('styles', dirMeta.styles);\n      assertArrayOfStrings('styleUrls', dirMeta.styleUrls);\n      assertInterpolationSymbols('interpolation', dirMeta.interpolation);\n\n      const /** @type {?} */ animations = dirMeta.animations ?\n          dirMeta.animations.map(e => this.getAnimationEntryMetadata(e)) :\n          null;\n\n      nonNormalizedTemplateMetadata = new cpl.CompileTemplateMetadata({\n        encapsulation: dirMeta.encapsulation,\n        template: dirMeta.template,\n        templateUrl: dirMeta.templateUrl,\n        styles: dirMeta.styles,\n        styleUrls: dirMeta.styleUrls,\n        animations: animations,\n        interpolation: dirMeta.interpolation\n      });\n    }\n\n    let /** @type {?} */ changeDetectionStrategy: ChangeDetectionStrategy = null;\n    let /** @type {?} */ viewProviders: cpl.CompileProviderMetadata[] = [];\n    let /** @type {?} */ entryComponentMetadata: cpl.CompileIdentifierMetadata[] = [];\n    let /** @type {?} */ selector = dirMeta.selector;\n\n    if (dirMeta instanceof Component) {\n      // Component\n      changeDetectionStrategy = dirMeta.changeDetection;\n      if (dirMeta.viewProviders) {\n        viewProviders = this._getProvidersMetadata(\n            dirMeta.viewProviders, entryComponentMetadata,\n            `viewProviders for \"${stringify(directiveType)}\"`, [], directiveType);\n      }\n      if (dirMeta.entryComponents) {\n        entryComponentMetadata = flattenAndDedupeArray(dirMeta.entryComponents)\n                                     .map((type) => this._getIdentifierMetadata(type))\n                                     .concat(entryComponentMetadata);\n      }\n      if (!selector) {\n        selector = this._schemaRegistry.getDefaultComponentElementName();\n      }\n    } else {\n      // Directive\n      if (!selector) {\n        this._reportError(\n            new Error(`Directive ${stringify(directiveType)} has no selector, please add it!`),\n            directiveType);\n        selector = 'error';\n      }\n    }\n\n    let /** @type {?} */ providers: cpl.CompileProviderMetadata[] = [];\n    if (isPresent(dirMeta.providers)) {\n      providers = this._getProvidersMetadata(\n          dirMeta.providers, entryComponentMetadata, `providers for \"${stringify(directiveType)}\"`,\n          [], directiveType);\n    }\n    let /** @type {?} */ queries: cpl.CompileQueryMetadata[] = [];\n    let /** @type {?} */ viewQueries: cpl.CompileQueryMetadata[] = [];\n    if (isPresent(dirMeta.queries)) {\n      queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n      viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n    }\n\n    const /** @type {?} */ metadata = cpl.CompileDirectiveMetadata.create({\n      selector: selector,\n      exportAs: dirMeta.exportAs,\n      isComponent: !!nonNormalizedTemplateMetadata,\n      type: this._getTypeMetadata(directiveType),\n      template: nonNormalizedTemplateMetadata,\n      changeDetection: changeDetectionStrategy,\n      inputs: dirMeta.inputs,\n      outputs: dirMeta.outputs,\n      host: dirMeta.host,\n      providers: providers,\n      viewProviders: viewProviders,\n      queries: queries,\n      viewQueries: viewQueries,\n      entryComponents: entryComponentMetadata\n    });\n    return {metadata, annotation: dirMeta};\n  }\n/**\n * Gets the metadata for the given directive.\n * This assumes `loadNgModuleMetadata` has been called first.\n * @param {?} directiveType\n * @return {?}\n */\ngetDirectiveMetadata(directiveType: any): cpl.CompileDirectiveMetadata {\n    const /** @type {?} */ dirMeta = this._directiveCache.get(directiveType);\n    if (!dirMeta) {\n      this._reportError(\n          new Error(\n              `Illegal state: getDirectiveMetadata can only be called after loadNgModuleMetadata for a module that declares it. Directive ${stringify(directiveType)}.`),\n          directiveType);\n    }\n    return dirMeta;\n  }\n/**\n * @param {?} dirType\n * @return {?}\n */\ngetDirectiveSummary(dirType: any): cpl.CompileDirectiveSummary {\n    const /** @type {?} */ dirSummary = /** @type {?} */((\n        <cpl.CompileDirectiveSummary>this._loadSummary(dirType, cpl.CompileSummaryKind.Directive)));\n    if (!dirSummary) {\n      this._reportError(\n          new Error(\n              `Illegal state: Could not load the summary for directive ${stringify(dirType)}.`),\n          dirType);\n    }\n    return dirSummary;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nisDirective(type: any) { return this._directiveResolver.isDirective(type); }\n/**\n * @param {?} type\n * @return {?}\n */\nisPipe(type: any) { return this._pipeResolver.isPipe(type); }\n/**\n * @param {?} moduleType\n * @return {?}\n */\ngetNgModuleSummary(moduleType: any): cpl.CompileNgModuleSummary {\n    let /** @type {?} */ moduleSummary = /** @type {?} */((\n        <cpl.CompileNgModuleSummary>this._loadSummary(moduleType, cpl.CompileSummaryKind.NgModule)));\n    if (!moduleSummary) {\n      const /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false);\n      moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n      if (moduleSummary) {\n        this._summaryCache.set(moduleType, moduleSummary);\n      }\n    }\n    return moduleSummary;\n  }\n/**\n * Loads the declared directives and pipes of an NgModule.\n * @param {?} moduleType\n * @param {?} isSync\n * @param {?=} throwIfNotFound\n * @return {?}\n */\nloadNgModuleDirectiveAndPipeMetadata(moduleType: any, isSync: boolean, throwIfNotFound = true):\n      Promise<any> {\n    const /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n    const /** @type {?} */ loading: Promise<any>[] = [];\n    if (ngModule) {\n      ngModule.declaredDirectives.forEach((id) => {\n        const /** @type {?} */ promise = this._loadDirectiveMetadata(id.reference, isSync);\n        if (promise) {\n          loading.push(promise);\n        }\n      });\n      ngModule.declaredPipes.forEach((id) => this._loadPipeMetadata(id.reference));\n    }\n    return Promise.all(loading);\n  }\n/**\n * @param {?} moduleType\n * @param {?=} throwIfNotFound\n * @return {?}\n */\ngetNgModuleMetadata(moduleType: any, throwIfNotFound = true): cpl.CompileNgModuleMetadata {\n    moduleType = resolveForwardRef(moduleType);\n    let /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n    if (compileMeta) {\n      return compileMeta;\n    }\n    const /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n    if (!meta) {\n      return null;\n    }\n    const /** @type {?} */ declaredDirectives: cpl.CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ exportedNonModuleIdentifiers: cpl.CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ declaredPipes: cpl.CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ importedModules: cpl.CompileNgModuleSummary[] = [];\n    const /** @type {?} */ exportedModules: cpl.CompileNgModuleSummary[] = [];\n    const /** @type {?} */ providers: cpl.CompileProviderMetadata[] = [];\n    const /** @type {?} */ entryComponents: cpl.CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ bootstrapComponents: cpl.CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ schemas: SchemaMetadata[] = [];\n\n    if (meta.imports) {\n      flattenAndDedupeArray(meta.imports).forEach((importedType) => {\n        let /** @type {?} */ importedModuleType: Type<any>;\n        if (isValidType(importedType)) {\n          importedModuleType = importedType;\n        } else if (importedType && importedType.ngModule) {\n          const /** @type {?} */ moduleWithProviders: ModuleWithProviders = importedType;\n          importedModuleType = moduleWithProviders.ngModule;\n          if (moduleWithProviders.providers) {\n            providers.push(...this._getProvidersMetadata(\n                moduleWithProviders.providers, entryComponents,\n                `provider for the NgModule '${stringify(importedModuleType)}'`, [], importedType));\n          }\n        }\n\n        if (importedModuleType) {\n          const /** @type {?} */ importedModuleSummary = this.getNgModuleSummary(importedModuleType);\n          if (!importedModuleSummary) {\n            this._reportError(\n                new Error(\n                    `Unexpected ${this._getTypeDescriptor(importedType)} '${stringify(importedType)}' imported by the module '${stringify(moduleType)}'`),\n                moduleType);\n            return;\n          }\n          importedModules.push(importedModuleSummary);\n        } else {\n          this._reportError(\n              new Error(\n                  `Unexpected value '${stringify(importedType)}' imported by the module '${stringify(moduleType)}'`),\n              moduleType);\n          return;\n        }\n      });\n    }\n\n    if (meta.exports) {\n      flattenAndDedupeArray(meta.exports).forEach((exportedType) => {\n        if (!isValidType(exportedType)) {\n          this._reportError(\n              new Error(\n                  `Unexpected value '${stringify(exportedType)}' exported by the module '${stringify(moduleType)}'`),\n              moduleType);\n          return;\n        }\n        const /** @type {?} */ exportedModuleSummary = this.getNgModuleSummary(exportedType);\n        if (exportedModuleSummary) {\n          exportedModules.push(exportedModuleSummary);\n        } else {\n          exportedNonModuleIdentifiers.push(this._getIdentifierMetadata(exportedType));\n        }\n      });\n    }\n\n    // Note: This will be modified later, so we rely on\n    // getting a new instance every time!\n    const /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n    if (meta.declarations) {\n      flattenAndDedupeArray(meta.declarations).forEach((declaredType) => {\n        if (!isValidType(declaredType)) {\n          this._reportError(\n              new Error(\n                  `Unexpected value '${stringify(declaredType)}' declared by the module '${stringify(moduleType)}'`),\n              moduleType);\n          return;\n        }\n        const /** @type {?} */ declaredIdentifier = this._getIdentifierMetadata(declaredType);\n        if (this._directiveResolver.isDirective(declaredType)) {\n          transitiveModule.addDirective(declaredIdentifier);\n          declaredDirectives.push(declaredIdentifier);\n          this._addTypeToModule(declaredType, moduleType);\n        } else if (this._pipeResolver.isPipe(declaredType)) {\n          transitiveModule.addPipe(declaredIdentifier);\n          transitiveModule.pipes.push(declaredIdentifier);\n          declaredPipes.push(declaredIdentifier);\n          this._addTypeToModule(declaredType, moduleType);\n        } else {\n          this._reportError(\n              new Error(\n                  `Unexpected ${this._getTypeDescriptor(declaredType)} '${stringify(declaredType)}' declared by the module '${stringify(moduleType)}'`),\n              moduleType);\n          return;\n        }\n      });\n    }\n\n    const /** @type {?} */ exportedDirectives: cpl.CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ exportedPipes: cpl.CompileIdentifierMetadata[] = [];\n    exportedNonModuleIdentifiers.forEach((exportedId) => {\n      if (transitiveModule.directivesSet.has(exportedId.reference)) {\n        exportedDirectives.push(exportedId);\n        transitiveModule.addExportedDirective(exportedId);\n      } else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n        exportedPipes.push(exportedId);\n        transitiveModule.addExportedPipe(exportedId);\n      } else {\n        this._reportError(\n            new Error(\n                `Can't export ${this._getTypeDescriptor(exportedId.reference)} ${stringify(exportedId.reference)} from ${stringify(moduleType)} as it was neither declared nor imported!`),\n            moduleType);\n      }\n    });\n\n    // The providers of the module have to go last\n    // so that they overwrite any other provider we already added.\n    if (meta.providers) {\n      providers.push(...this._getProvidersMetadata(\n          meta.providers, entryComponents, `provider for the NgModule '${stringify(moduleType)}'`,\n          [], moduleType));\n    }\n\n    if (meta.entryComponents) {\n      entryComponents.push(\n          ...flattenAndDedupeArray(meta.entryComponents).map(type => this._getTypeMetadata(type)));\n    }\n\n    if (meta.bootstrap) {\n      flattenAndDedupeArray(meta.bootstrap).forEach(type => {\n        if (!isValidType(type)) {\n          this._reportError(\n              new Error(\n                  `Unexpected value '${stringify(type)}' used in the bootstrap property of module '${stringify(moduleType)}'`),\n              moduleType);\n          return;\n        }\n        bootstrapComponents.push(this._getTypeMetadata(type));\n      });\n    }\n\n    entryComponents.push(...bootstrapComponents);\n\n    if (meta.schemas) {\n      schemas.push(...flattenAndDedupeArray(meta.schemas));\n    }\n\n    compileMeta = new cpl.CompileNgModuleMetadata({\n      type: this._getTypeMetadata(moduleType),\n      providers,\n      entryComponents,\n      bootstrapComponents,\n      schemas,\n      declaredDirectives,\n      exportedDirectives,\n      declaredPipes,\n      exportedPipes,\n      importedModules,\n      exportedModules,\n      transitiveModule,\n      id: meta.id,\n    });\n\n    entryComponents.forEach((id) => transitiveModule.addEntryComponent(id));\n    providers.forEach((provider) => transitiveModule.addProvider(provider, compileMeta.type));\n    transitiveModule.addModule(compileMeta.type);\n    this._ngModuleCache.set(moduleType, compileMeta);\n    return compileMeta;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nprivate _getTypeDescriptor(type: Type<any>): string {\n    if (this._directiveResolver.isDirective(type)) {\n      return 'directive';\n    }\n\n    if (this._pipeResolver.isPipe(type)) {\n      return 'pipe';\n    }\n\n    if (this._ngModuleResolver.isNgModule(type)) {\n      return 'module';\n    }\n\n    if (( /** @type {?} */((type as any))).provide) {\n      return 'provider';\n    }\n\n    return 'value';\n  }\n/**\n * @param {?} type\n * @param {?} moduleType\n * @return {?}\n */\nprivate _addTypeToModule(type: Type<any>, moduleType: Type<any>) {\n    const /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n    if (oldModule && oldModule !== moduleType) {\n      this._reportError(\n          new Error(\n              `Type ${stringify(type)} is part of the declarations of 2 modules: ${stringify(oldModule)} and ${stringify(moduleType)}! ` +\n              `Please consider moving ${stringify(type)} to a higher module that imports ${stringify(oldModule)} and ${stringify(moduleType)}. ` +\n              `You can also create a new NgModule that exports and includes ${stringify(type)} then import that NgModule in ${stringify(oldModule)} and ${stringify(moduleType)}.`),\n          moduleType);\n    }\n    this._ngModuleOfTypes.set(type, moduleType);\n  }\n/**\n * @param {?} importedModules\n * @param {?} exportedModules\n * @return {?}\n */\nprivate _getTransitiveNgModuleMetadata(\n      importedModules: cpl.CompileNgModuleSummary[],\n      exportedModules: cpl.CompileNgModuleSummary[]): cpl.TransitiveCompileNgModuleMetadata {\n    // collect `providers` / `entryComponents` from all imported and all exported modules\n    const /** @type {?} */ result = new cpl.TransitiveCompileNgModuleMetadata();\n    const /** @type {?} */ modulesByToken = new Map<any, Set<any>>();\n    importedModules.concat(exportedModules).forEach((modSummary) => {\n      modSummary.modules.forEach((mod) => result.addModule(mod));\n      modSummary.entryComponents.forEach((comp) => result.addEntryComponent(comp));\n      const /** @type {?} */ addedTokens = new Set<any>();\n      modSummary.providers.forEach((entry) => {\n        const /** @type {?} */ tokenRef = cpl.tokenReference(entry.provider.token);\n        let /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n        if (!prevModules) {\n          prevModules = new Set<any>();\n          modulesByToken.set(tokenRef, prevModules);\n        }\n        const /** @type {?} */ moduleRef = entry.module.reference;\n        // Note: the providers of one module may still contain multiple providers\n        // per token (e.g. for multi providers), and we need to preserve these.\n        if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n          prevModules.add(moduleRef);\n          addedTokens.add(tokenRef);\n          result.addProvider(entry.provider, entry.module);\n        }\n      });\n    });\n    exportedModules.forEach((modSummary) => {\n      modSummary.exportedDirectives.forEach((id) => result.addExportedDirective(id));\n      modSummary.exportedPipes.forEach((id) => result.addExportedPipe(id));\n    });\n    importedModules.forEach((modSummary) => {\n      modSummary.exportedDirectives.forEach((id) => result.addDirective(id));\n      modSummary.exportedPipes.forEach((id) => result.addPipe(id));\n    });\n    return result;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nprivate _getIdentifierMetadata(type: Type<any>): cpl.CompileIdentifierMetadata {\n    type = resolveForwardRef(type);\n    return {reference: type};\n  }\n/**\n * @param {?} type\n * @param {?=} dependencies\n * @return {?}\n */\nprivate _getTypeMetadata(type: Type<any>, dependencies: any[] = null): cpl.CompileTypeMetadata {\n    const /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n    return {\n      reference: identifier.reference,\n      diDeps: this._getDependenciesMetadata(identifier.reference, dependencies),\n      lifecycleHooks:\n          LIFECYCLE_HOOKS_VALUES.filter(hook => hasLifecycleHook(hook, identifier.reference)),\n    };\n  }\n/**\n * @param {?} factory\n * @param {?=} dependencies\n * @return {?}\n */\nprivate _getFactoryMetadata(factory: Function, dependencies: any[] = null):\n      cpl.CompileFactoryMetadata {\n    factory = resolveForwardRef(factory);\n    return {reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies)};\n  }\n/**\n * Gets the metadata for the given pipe.\n * This assumes `loadNgModuleMetadata` has been called first.\n * @param {?} pipeType\n * @return {?}\n */\ngetPipeMetadata(pipeType: any): cpl.CompilePipeMetadata {\n    const /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n    if (!pipeMeta) {\n      this._reportError(\n          new Error(\n              `Illegal state: getPipeMetadata can only be called after loadNgModuleMetadata for a module that declares it. Pipe ${stringify(pipeType)}.`),\n          pipeType);\n    }\n    return pipeMeta;\n  }\n/**\n * @param {?} pipeType\n * @return {?}\n */\ngetPipeSummary(pipeType: any): cpl.CompilePipeSummary {\n    const /** @type {?} */ pipeSummary = /** @type {?} */((\n        <cpl.CompilePipeSummary>this._loadSummary(pipeType, cpl.CompileSummaryKind.Pipe)));\n    if (!pipeSummary) {\n      this._reportError(\n          new Error(`Illegal state: Could not load the summary for pipe ${stringify(pipeType)}.`),\n          pipeType);\n    }\n    return pipeSummary;\n  }\n/**\n * @param {?} pipeType\n * @return {?}\n */\ngetOrLoadPipeMetadata(pipeType: any): cpl.CompilePipeMetadata {\n    let /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n    if (!pipeMeta) {\n      pipeMeta = this._loadPipeMetadata(pipeType);\n    }\n    return pipeMeta;\n  }\n/**\n * @param {?} pipeType\n * @return {?}\n */\nprivate _loadPipeMetadata(pipeType: any): cpl.CompilePipeMetadata {\n    pipeType = resolveForwardRef(pipeType);\n    const /** @type {?} */ pipeAnnotation = this._pipeResolver.resolve(pipeType);\n\n    const /** @type {?} */ pipeMeta = new cpl.CompilePipeMetadata({\n      type: this._getTypeMetadata(pipeType),\n      name: pipeAnnotation.name,\n      pure: pipeAnnotation.pure\n    });\n    this._pipeCache.set(pipeType, pipeMeta);\n    this._summaryCache.set(pipeType, pipeMeta.toSummary());\n    return pipeMeta;\n  }\n/**\n * @param {?} typeOrFunc\n * @param {?} dependencies\n * @return {?}\n */\nprivate _getDependenciesMetadata(typeOrFunc: Type<any>|Function, dependencies: any[]):\n      cpl.CompileDiDependencyMetadata[] {\n    let /** @type {?} */ hasUnknownDeps = false;\n    const /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n\n    const /** @type {?} */ dependenciesMetadata: cpl.CompileDiDependencyMetadata[] = params.map((param) => {\n      let /** @type {?} */ isAttribute = false;\n      let /** @type {?} */ isHost = false;\n      let /** @type {?} */ isSelf = false;\n      let /** @type {?} */ isSkipSelf = false;\n      let /** @type {?} */ isOptional = false;\n      let /** @type {?} */ token: any = null;\n      if (Array.isArray(param)) {\n        param.forEach((paramEntry) => {\n          if (paramEntry instanceof Host) {\n            isHost = true;\n          } else if (paramEntry instanceof Self) {\n            isSelf = true;\n          } else if (paramEntry instanceof SkipSelf) {\n            isSkipSelf = true;\n          } else if (paramEntry instanceof Optional) {\n            isOptional = true;\n          } else if (paramEntry instanceof Attribute) {\n            isAttribute = true;\n            token = paramEntry.attributeName;\n          } else if (paramEntry instanceof Inject) {\n            token = paramEntry.token;\n          } else if (isValidType(paramEntry) && isBlank(token)) {\n            token = paramEntry;\n          }\n        });\n      } else {\n        token = param;\n      }\n      if (isBlank(token)) {\n        hasUnknownDeps = true;\n        return null;\n      }\n\n      return {\n        isAttribute,\n        isHost,\n        isSelf,\n        isSkipSelf,\n        isOptional,\n        token: this._getTokenMetadata(token)\n      };\n\n    });\n\n    if (hasUnknownDeps) {\n      const /** @type {?} */ depsTokens =\n          dependenciesMetadata.map((dep) => dep ? stringify(dep.token) : '?').join(', ');\n      this._reportError(\n          new Error(`Can't resolve all parameters for ${stringify(typeOrFunc)}: (${depsTokens}).`),\n          typeOrFunc);\n    }\n\n    return dependenciesMetadata;\n  }\n/**\n * @param {?} token\n * @return {?}\n */\nprivate _getTokenMetadata(token: any): cpl.CompileTokenMetadata {\n    token = resolveForwardRef(token);\n    let /** @type {?} */ compileToken: cpl.CompileTokenMetadata;\n    if (typeof token === 'string') {\n      compileToken = {value: token};\n    } else {\n      compileToken = {identifier: {reference: token}};\n    }\n    return compileToken;\n  }\n/**\n * @param {?} providers\n * @param {?} targetEntryComponents\n * @param {?=} debugInfo\n * @param {?=} compileProviders\n * @param {?=} type\n * @return {?}\n */\nprivate _getProvidersMetadata(\n      providers: Provider[], targetEntryComponents: cpl.CompileIdentifierMetadata[],\n      debugInfo?: string, compileProviders: cpl.CompileProviderMetadata[] = [],\n      type?: any): cpl.CompileProviderMetadata[] {\n    providers.forEach((provider: any, providerIdx: number) => {\n      if (Array.isArray(provider)) {\n        this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n      } else {\n        provider = resolveForwardRef(provider);\n        let /** @type {?} */ providerMeta: cpl.ProviderMeta;\n        if (provider && typeof provider == 'object' && provider.hasOwnProperty('provide')) {\n          providerMeta = new cpl.ProviderMeta(provider.provide, provider);\n        } else if (isValidType(provider)) {\n          providerMeta = new cpl.ProviderMeta(provider, {useClass: provider});\n        } else {\n          const /** @type {?} */ providersInfo =\n              ( /** @type {?} */((<string[]>providers.reduce(\n                   (soFar: string[], seenProvider: any, seenProviderIdx: number) => {\n                     if (seenProviderIdx < providerIdx) {\n                       soFar.push(`${stringify(seenProvider)}`);\n                     } else if (seenProviderIdx == providerIdx) {\n                       soFar.push(`?${stringify(seenProvider)}?`);\n                     } else if (seenProviderIdx == providerIdx + 1) {\n                       soFar.push('...');\n                     }\n                     return soFar;\n                   },\n                   []))))\n                  .join(', ');\n          this._reportError(\n              new Error(\n                  `Invalid ${debugInfo ? debugInfo : 'provider'} - only instances of Provider and Type are allowed, got: [${providersInfo}]`),\n              type);\n        }\n        if (providerMeta.token === resolveIdentifier(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n          targetEntryComponents.push(...this._getEntryComponentsFromProvider(providerMeta, type));\n        } else {\n          compileProviders.push(this.getProviderMetadata(providerMeta));\n        }\n      }\n    });\n    return compileProviders;\n  }\n/**\n * @param {?} provider\n * @param {?=} type\n * @return {?}\n */\nprivate _getEntryComponentsFromProvider(provider: cpl.ProviderMeta, type?: any):\n      cpl.CompileIdentifierMetadata[] {\n    const /** @type {?} */ components: cpl.CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ collectedIdentifiers: cpl.CompileIdentifierMetadata[] = [];\n\n    if (provider.useFactory || provider.useExisting || provider.useClass) {\n      this._reportError(\n          new Error(`The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!`), type);\n      return [];\n    }\n\n    if (!provider.multi) {\n      this._reportError(\n          new Error(`The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!`), type);\n      return [];\n    }\n\n    extractIdentifiers(provider.useValue, collectedIdentifiers);\n    collectedIdentifiers.forEach((identifier) => {\n      if (this._directiveResolver.isDirective(identifier.reference)) {\n        components.push(identifier);\n      }\n    });\n    return components;\n  }\n/**\n * @param {?} provider\n * @return {?}\n */\ngetProviderMetadata(provider: cpl.ProviderMeta): cpl.CompileProviderMetadata {\n    let /** @type {?} */ compileDeps: cpl.CompileDiDependencyMetadata[];\n    let /** @type {?} */ compileTypeMetadata: cpl.CompileTypeMetadata = null;\n    let /** @type {?} */ compileFactoryMetadata: cpl.CompileFactoryMetadata = null;\n    let /** @type {?} */ token: cpl.CompileTokenMetadata = this._getTokenMetadata(provider.token);\n\n    if (provider.useClass) {\n      compileTypeMetadata = this._getTypeMetadata(provider.useClass, provider.dependencies);\n      compileDeps = compileTypeMetadata.diDeps;\n      if (provider.token === provider.useClass) {\n        // use the compileTypeMetadata as it contains information about lifecycleHooks...\n        token = {identifier: compileTypeMetadata};\n      }\n    } else if (provider.useFactory) {\n      compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n      compileDeps = compileFactoryMetadata.diDeps;\n    }\n\n    return {\n      token: token,\n      useClass: compileTypeMetadata,\n      useValue: provider.useValue,\n      useFactory: compileFactoryMetadata,\n      useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : null,\n      deps: compileDeps,\n      multi: provider.multi\n    };\n  }\n/**\n * @param {?} queries\n * @param {?} isViewQuery\n * @param {?} directiveType\n * @return {?}\n */\nprivate _getQueriesMetadata(\n      queries: {[key: string]: Query}, isViewQuery: boolean,\n      directiveType: Type<any>): cpl.CompileQueryMetadata[] {\n    const /** @type {?} */ res: cpl.CompileQueryMetadata[] = [];\n\n    Object.keys(queries).forEach((propertyName: string) => {\n      const /** @type {?} */ query = queries[propertyName];\n      if (query.isViewQuery === isViewQuery) {\n        res.push(this._getQueryMetadata(query, propertyName, directiveType));\n      }\n    });\n\n    return res;\n  }\n/**\n * @param {?} selector\n * @return {?}\n */\nprivate _queryVarBindings(selector: any): string[] { return selector.split(/\\s*,\\s*/); }\n/**\n * @param {?} q\n * @param {?} propertyName\n * @param {?} typeOrFunc\n * @return {?}\n */\nprivate _getQueryMetadata(q: Query, propertyName: string, typeOrFunc: Type<any>|Function):\n      cpl.CompileQueryMetadata {\n    let /** @type {?} */ selectors: cpl.CompileTokenMetadata[];\n    if (typeof q.selector === 'string') {\n      selectors =\n          this._queryVarBindings(q.selector).map(varName => this._getTokenMetadata(varName));\n    } else {\n      if (!q.selector) {\n        this._reportError(\n            new Error(\n                `Can't construct a query for the property \"${propertyName}\" of \"${stringify(typeOrFunc)}\" since the query selector wasn't defined.`),\n            typeOrFunc);\n      }\n      selectors = [this._getTokenMetadata(q.selector)];\n    }\n\n    return {\n      selectors,\n      first: q.first,\n      descendants: q.descendants, propertyName,\n      read: q.read ? this._getTokenMetadata(q.read) : null\n    };\n  }\n/**\n * @param {?} error\n * @param {?=} type\n * @param {?=} otherType\n * @return {?}\n */\nprivate _reportError(error: any, type?: any, otherType?: any) {\n    if (this._errorCollector) {\n      this._errorCollector(error, type);\n      if (otherType) {\n        this._errorCollector(error, otherType);\n      }\n    } else {\n      throw error;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgModuleResolver, },\n{type: DirectiveResolver, },\n{type: PipeResolver, },\n{type: SummaryResolver, },\n{type: ElementSchemaRegistry, },\n{type: DirectiveNormalizer, },\n{type: ReflectorReader, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ERROR_COLLECTOR_TOKEN, ] }, ]},\n];\n}\n\nfunction CompileMetadataResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nCompileMetadataResolver.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCompileMetadataResolver.ctorParameters;\n/** @type {?} */\nCompileMetadataResolver.prototype._directiveCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._summaryCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._pipeCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._ngModuleCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._ngModuleOfTypes;\n/** @type {?} */\nCompileMetadataResolver.prototype._ngModuleResolver;\n/** @type {?} */\nCompileMetadataResolver.prototype._directiveResolver;\n/** @type {?} */\nCompileMetadataResolver.prototype._pipeResolver;\n/** @type {?} */\nCompileMetadataResolver.prototype._summaryResolver;\n/** @type {?} */\nCompileMetadataResolver.prototype._schemaRegistry;\n/** @type {?} */\nCompileMetadataResolver.prototype._directiveNormalizer;\n/** @type {?} */\nCompileMetadataResolver.prototype._reflector;\n/** @type {?} */\nCompileMetadataResolver.prototype._errorCollector;\n}\n\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree: any[], out: Array<any> = []): Array<any> {\n  if (tree) {\n    for (let /** @type {?} */ i = 0; i < tree.length; i++) {\n      const /** @type {?} */ item = resolveForwardRef(tree[i]);\n      if (Array.isArray(item)) {\n        flattenArray(item, out);\n      } else {\n        out.push(item);\n      }\n    }\n  }\n  return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array: any[]): Array<any> {\n  if (array) {\n    return Array.from(new Set(array));\n  }\n  return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree: any[]): Array<any> {\n  return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value: any): boolean {\n  return (value instanceof StaticSymbol) || (value instanceof Type);\n}\n/**\n * @param {?} reflector\n * @param {?} type\n * @param {?} cmpMetadata\n * @return {?}\n */\nexport function componentModuleUrl(\n    reflector: ReflectorReader, type: Type<any>, cmpMetadata: Component): string {\n  if (type instanceof StaticSymbol) {\n    return type.filePath;\n  }\n\n  const /** @type {?} */ moduleId = cmpMetadata.moduleId;\n\n  if (typeof moduleId === 'string') {\n    const /** @type {?} */ scheme = getUrlScheme(moduleId);\n    return scheme ? moduleId : `package:${moduleId}${MODULE_SUFFIX}`;\n  } else if (moduleId !== null && moduleId !== void 0) {\n    throw new Error(\n        `moduleId should be a string in \"${stringify(type)}\". See https://goo.gl/wIDDiL for more information.\\n` +\n        `If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.`);\n  }\n\n  return reflector.importUri(type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value: any, targetIdentifiers: cpl.CompileIdentifierMetadata[]) {\n  visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nclass _CompileValueConverter extends ValueTransformer {\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nvisitOther(value: any, targetIdentifiers: cpl.CompileIdentifierMetadata[]): any {\n    targetIdentifiers.push({reference: value});\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}