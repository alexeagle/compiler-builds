{"version":3,"file":"xml_parser.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/ml_parser/xml_parser.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAkB,MAAM,EAAC,MAAM,UAAU;OACzC,EAAC,mBAAmB,EAAC,MAAM,YAAY;AAE9C,SAAQ,eAAe,EAAE,SAAS,QAAO,UAAU,CAAC;AACpD,+BAA+B,MAAM;IACrC;QAAgB,MAAM,mBAAmB,CAAC,CAAC;IAAC,CAAC;IAC7C;;;;;OAKG;IACH,KAAK,CAAC,MAAc,EAAE,GAAW,EAAE,mBAAmB,GAAY,KAAK;QACnE,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,mBAAmB,EAAE,IAAI,CAAC,CAAC;IAC7D,CAAC;AACH,CAAC;AAAA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ParseTreeResult, Parser} from './parser';\nimport {getXmlTagDefinition} from './xml_tags';\n\nexport {ParseTreeResult, TreeError} from './parser';\nexport class XmlParser extends Parser {\nconstructor() { super(getXmlTagDefinition); }\n/**\n * @param {?} source\n * @param {?} url\n * @param {?=} parseExpansionForms\n * @return {?}\n */\nparse(source: string, url: string, parseExpansionForms: boolean = false): ParseTreeResult {\n    return super.parse(source, url, parseExpansionForms, null);\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}