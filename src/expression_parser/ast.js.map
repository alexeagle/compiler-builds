{"version":3,"file":"ast.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/expression_parser/ast.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {isBlank} from '../facade/lang';\nexport class ParserError {\npublic message: string;\n/**\n * @param {?} message\n * @param {?} input\n * @param {?} errLocation\n * @param {?=} ctxLocation\n */\nconstructor(\n      message: string,\npublic input: string,\npublic errLocation: string,\npublic ctxLocation?: any) {\n    this.message = `Parser Error: ${message} ${errLocation} [${input}] in ${ctxLocation}`;\n  }\n}\n\nfunction ParserError_tsickle_Closure_declarations() {\n/** @type {?} */\nParserError.prototype.message;\n/** @type {?} */\nParserError.prototype.input;\n/** @type {?} */\nParserError.prototype.errLocation;\n/** @type {?} */\nParserError.prototype.ctxLocation;\n}\n\nexport class ParseSpan {\n/**\n * @param {?} start\n * @param {?} end\n */\nconstructor(public start: number,\npublic end: number) {}\n}\n\nfunction ParseSpan_tsickle_Closure_declarations() {\n/** @type {?} */\nParseSpan.prototype.start;\n/** @type {?} */\nParseSpan.prototype.end;\n}\n\nexport class AST {\n/**\n * @param {?} span\n */\nconstructor(public span: ParseSpan) {}\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any { return null; }\n/**\n * @return {?}\n */\ntoString(): string { return 'AST'; }\n}\n\nfunction AST_tsickle_Closure_declarations() {\n/** @type {?} */\nAST.prototype.span;\n}\n\n/**\n * Represents a quoted expression of the form:\n * \n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n * \n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nexport class Quote extends AST {\n/**\n * @param {?} span\n * @param {?} prefix\n * @param {?} uninterpretedExpression\n * @param {?} location\n */\nconstructor(\n      span: ParseSpan,\npublic prefix: string,\npublic uninterpretedExpression: string,\npublic location: any) {\n    super(span);\n  }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any { return visitor.visitQuote(this, context); }\n/**\n * @return {?}\n */\ntoString(): string { return 'Quote'; }\n}\n\nfunction Quote_tsickle_Closure_declarations() {\n/** @type {?} */\nQuote.prototype.prefix;\n/** @type {?} */\nQuote.prototype.uninterpretedExpression;\n/** @type {?} */\nQuote.prototype.location;\n}\n\nexport class EmptyExpr extends AST {\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null) {\n    // do nothing\n  }\n}\nexport class ImplicitReceiver extends AST {\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitImplicitReceiver(this, context);\n  }\n}\n/**\n * Multiple expressions separated by a semicolon.\n */\nexport class Chain extends AST {\n/**\n * @param {?} span\n * @param {?} expressions\n */\nconstructor(span: ParseSpan,\npublic expressions: any[]) { super(span); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any { return visitor.visitChain(this, context); }\n}\n\nfunction Chain_tsickle_Closure_declarations() {\n/** @type {?} */\nChain.prototype.expressions;\n}\n\nexport class Conditional extends AST {\n/**\n * @param {?} span\n * @param {?} condition\n * @param {?} trueExp\n * @param {?} falseExp\n */\nconstructor(span: ParseSpan,\npublic condition: AST,\npublic trueExp: AST,\npublic falseExp: AST) {\n    super(span);\n  }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitConditional(this, context);\n  }\n}\n\nfunction Conditional_tsickle_Closure_declarations() {\n/** @type {?} */\nConditional.prototype.condition;\n/** @type {?} */\nConditional.prototype.trueExp;\n/** @type {?} */\nConditional.prototype.falseExp;\n}\n\nexport class PropertyRead extends AST {\n/**\n * @param {?} span\n * @param {?} receiver\n * @param {?} name\n */\nconstructor(span: ParseSpan,\npublic receiver: AST,\npublic name: string) { super(span); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitPropertyRead(this, context);\n  }\n}\n\nfunction PropertyRead_tsickle_Closure_declarations() {\n/** @type {?} */\nPropertyRead.prototype.receiver;\n/** @type {?} */\nPropertyRead.prototype.name;\n}\n\nexport class PropertyWrite extends AST {\n/**\n * @param {?} span\n * @param {?} receiver\n * @param {?} name\n * @param {?} value\n */\nconstructor(span: ParseSpan,\npublic receiver: AST,\npublic name: string,\npublic value: AST) {\n    super(span);\n  }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitPropertyWrite(this, context);\n  }\n}\n\nfunction PropertyWrite_tsickle_Closure_declarations() {\n/** @type {?} */\nPropertyWrite.prototype.receiver;\n/** @type {?} */\nPropertyWrite.prototype.name;\n/** @type {?} */\nPropertyWrite.prototype.value;\n}\n\nexport class SafePropertyRead extends AST {\n/**\n * @param {?} span\n * @param {?} receiver\n * @param {?} name\n */\nconstructor(span: ParseSpan,\npublic receiver: AST,\npublic name: string) { super(span); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitSafePropertyRead(this, context);\n  }\n}\n\nfunction SafePropertyRead_tsickle_Closure_declarations() {\n/** @type {?} */\nSafePropertyRead.prototype.receiver;\n/** @type {?} */\nSafePropertyRead.prototype.name;\n}\n\nexport class KeyedRead extends AST {\n/**\n * @param {?} span\n * @param {?} obj\n * @param {?} key\n */\nconstructor(span: ParseSpan,\npublic obj: AST,\npublic key: AST) { super(span); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitKeyedRead(this, context);\n  }\n}\n\nfunction KeyedRead_tsickle_Closure_declarations() {\n/** @type {?} */\nKeyedRead.prototype.obj;\n/** @type {?} */\nKeyedRead.prototype.key;\n}\n\nexport class KeyedWrite extends AST {\n/**\n * @param {?} span\n * @param {?} obj\n * @param {?} key\n * @param {?} value\n */\nconstructor(span: ParseSpan,\npublic obj: AST,\npublic key: AST,\npublic value: AST) { super(span); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitKeyedWrite(this, context);\n  }\n}\n\nfunction KeyedWrite_tsickle_Closure_declarations() {\n/** @type {?} */\nKeyedWrite.prototype.obj;\n/** @type {?} */\nKeyedWrite.prototype.key;\n/** @type {?} */\nKeyedWrite.prototype.value;\n}\n\nexport class BindingPipe extends AST {\n/**\n * @param {?} span\n * @param {?} exp\n * @param {?} name\n * @param {?} args\n */\nconstructor(span: ParseSpan,\npublic exp: AST,\npublic name: string,\npublic args: any[]) {\n    super(span);\n  }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any { return visitor.visitPipe(this, context); }\n}\n\nfunction BindingPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nBindingPipe.prototype.exp;\n/** @type {?} */\nBindingPipe.prototype.name;\n/** @type {?} */\nBindingPipe.prototype.args;\n}\n\nexport class LiteralPrimitive extends AST {\n/**\n * @param {?} span\n * @param {?} value\n */\nconstructor(span: ParseSpan,\npublic value: any) { super(span); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitLiteralPrimitive(this, context);\n  }\n}\n\nfunction LiteralPrimitive_tsickle_Closure_declarations() {\n/** @type {?} */\nLiteralPrimitive.prototype.value;\n}\n\nexport class LiteralArray extends AST {\n/**\n * @param {?} span\n * @param {?} expressions\n */\nconstructor(span: ParseSpan,\npublic expressions: any[]) { super(span); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitLiteralArray(this, context);\n  }\n}\n\nfunction LiteralArray_tsickle_Closure_declarations() {\n/** @type {?} */\nLiteralArray.prototype.expressions;\n}\n\nexport class LiteralMap extends AST {\n/**\n * @param {?} span\n * @param {?} keys\n * @param {?} values\n */\nconstructor(span: ParseSpan,\npublic keys: any[],\npublic values: any[]) { super(span); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitLiteralMap(this, context);\n  }\n}\n\nfunction LiteralMap_tsickle_Closure_declarations() {\n/** @type {?} */\nLiteralMap.prototype.keys;\n/** @type {?} */\nLiteralMap.prototype.values;\n}\n\nexport class Interpolation extends AST {\n/**\n * @param {?} span\n * @param {?} strings\n * @param {?} expressions\n */\nconstructor(span: ParseSpan,\npublic strings: any[],\npublic expressions: any[]) { super(span); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitInterpolation(this, context);\n  }\n}\n\nfunction Interpolation_tsickle_Closure_declarations() {\n/** @type {?} */\nInterpolation.prototype.strings;\n/** @type {?} */\nInterpolation.prototype.expressions;\n}\n\nexport class Binary extends AST {\n/**\n * @param {?} span\n * @param {?} operation\n * @param {?} left\n * @param {?} right\n */\nconstructor(span: ParseSpan,\npublic operation: string,\npublic left: AST,\npublic right: AST) {\n    super(span);\n  }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitBinary(this, context);\n  }\n}\n\nfunction Binary_tsickle_Closure_declarations() {\n/** @type {?} */\nBinary.prototype.operation;\n/** @type {?} */\nBinary.prototype.left;\n/** @type {?} */\nBinary.prototype.right;\n}\n\nexport class PrefixNot extends AST {\n/**\n * @param {?} span\n * @param {?} expression\n */\nconstructor(span: ParseSpan,\npublic expression: AST) { super(span); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitPrefixNot(this, context);\n  }\n}\n\nfunction PrefixNot_tsickle_Closure_declarations() {\n/** @type {?} */\nPrefixNot.prototype.expression;\n}\n\nexport class MethodCall extends AST {\n/**\n * @param {?} span\n * @param {?} receiver\n * @param {?} name\n * @param {?} args\n */\nconstructor(span: ParseSpan,\npublic receiver: AST,\npublic name: string,\npublic args: any[]) {\n    super(span);\n  }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitMethodCall(this, context);\n  }\n}\n\nfunction MethodCall_tsickle_Closure_declarations() {\n/** @type {?} */\nMethodCall.prototype.receiver;\n/** @type {?} */\nMethodCall.prototype.name;\n/** @type {?} */\nMethodCall.prototype.args;\n}\n\nexport class SafeMethodCall extends AST {\n/**\n * @param {?} span\n * @param {?} receiver\n * @param {?} name\n * @param {?} args\n */\nconstructor(span: ParseSpan,\npublic receiver: AST,\npublic name: string,\npublic args: any[]) {\n    super(span);\n  }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitSafeMethodCall(this, context);\n  }\n}\n\nfunction SafeMethodCall_tsickle_Closure_declarations() {\n/** @type {?} */\nSafeMethodCall.prototype.receiver;\n/** @type {?} */\nSafeMethodCall.prototype.name;\n/** @type {?} */\nSafeMethodCall.prototype.args;\n}\n\nexport class FunctionCall extends AST {\n/**\n * @param {?} span\n * @param {?} target\n * @param {?} args\n */\nconstructor(span: ParseSpan,\npublic target: AST,\npublic args: any[]) { super(span); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitFunctionCall(this, context);\n  }\n}\n\nfunction FunctionCall_tsickle_Closure_declarations() {\n/** @type {?} */\nFunctionCall.prototype.target;\n/** @type {?} */\nFunctionCall.prototype.args;\n}\n\nexport class ASTWithSource extends AST {\n/**\n * @param {?} ast\n * @param {?} source\n * @param {?} location\n * @param {?} errors\n */\nconstructor(\npublic ast: AST,\npublic source: string,\npublic location: string,\npublic errors: ParserError[]) {\n    super(new ParseSpan(0, isBlank(source) ? 0 : source.length));\n  }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any { return this.ast.visit(visitor, context); }\n/**\n * @return {?}\n */\ntoString(): string { return `${this.source} in ${this.location}`; }\n}\n\nfunction ASTWithSource_tsickle_Closure_declarations() {\n/** @type {?} */\nASTWithSource.prototype.ast;\n/** @type {?} */\nASTWithSource.prototype.source;\n/** @type {?} */\nASTWithSource.prototype.location;\n/** @type {?} */\nASTWithSource.prototype.errors;\n}\n\nexport class TemplateBinding {\n/**\n * @param {?} span\n * @param {?} key\n * @param {?} keyIsVar\n * @param {?} name\n * @param {?} expression\n */\nconstructor(\npublic span: ParseSpan,\npublic key: string,\npublic keyIsVar: boolean,\npublic name: string,\npublic expression: ASTWithSource) {}\n}\n\nfunction TemplateBinding_tsickle_Closure_declarations() {\n/** @type {?} */\nTemplateBinding.prototype.span;\n/** @type {?} */\nTemplateBinding.prototype.key;\n/** @type {?} */\nTemplateBinding.prototype.keyIsVar;\n/** @type {?} */\nTemplateBinding.prototype.name;\n/** @type {?} */\nTemplateBinding.prototype.expression;\n}\n\n\nexport interface AstVisitor {\n  visitBinary(ast: Binary, context: any): any;\n  visitChain(ast: Chain, context: any): any;\n  visitConditional(ast: Conditional, context: any): any;\n  visitFunctionCall(ast: FunctionCall, context: any): any;\n  visitImplicitReceiver(ast: ImplicitReceiver, context: any): any;\n  visitInterpolation(ast: Interpolation, context: any): any;\n  visitKeyedRead(ast: KeyedRead, context: any): any;\n  visitKeyedWrite(ast: KeyedWrite, context: any): any;\n  visitLiteralArray(ast: LiteralArray, context: any): any;\n  visitLiteralMap(ast: LiteralMap, context: any): any;\n  visitLiteralPrimitive(ast: LiteralPrimitive, context: any): any;\n  visitMethodCall(ast: MethodCall, context: any): any;\n  visitPipe(ast: BindingPipe, context: any): any;\n  visitPrefixNot(ast: PrefixNot, context: any): any;\n  visitPropertyRead(ast: PropertyRead, context: any): any;\n  visitPropertyWrite(ast: PropertyWrite, context: any): any;\n  visitQuote(ast: Quote, context: any): any;\n  visitSafeMethodCall(ast: SafeMethodCall, context: any): any;\n  visitSafePropertyRead(ast: SafePropertyRead, context: any): any;\n}\nexport class RecursiveAstVisitor implements AstVisitor {\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitBinary(ast: Binary, context: any): any {\n    ast.left.visit(this);\n    ast.right.visit(this);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitChain(ast: Chain, context: any): any { return this.visitAll(ast.expressions, context); }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitConditional(ast: Conditional, context: any): any {\n    ast.condition.visit(this);\n    ast.trueExp.visit(this);\n    ast.falseExp.visit(this);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPipe(ast: BindingPipe, context: any): any {\n    ast.exp.visit(this);\n    this.visitAll(ast.args, context);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitFunctionCall(ast: FunctionCall, context: any): any {\n    ast.target.visit(this);\n    this.visitAll(ast.args, context);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitImplicitReceiver(ast: ImplicitReceiver, context: any): any { return null; }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitInterpolation(ast: Interpolation, context: any): any {\n    return this.visitAll(ast.expressions, context);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitKeyedRead(ast: KeyedRead, context: any): any {\n    ast.obj.visit(this);\n    ast.key.visit(this);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitKeyedWrite(ast: KeyedWrite, context: any): any {\n    ast.obj.visit(this);\n    ast.key.visit(this);\n    ast.value.visit(this);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralArray(ast: LiteralArray, context: any): any {\n    return this.visitAll(ast.expressions, context);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralMap(ast: LiteralMap, context: any): any { return this.visitAll(ast.values, context); }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralPrimitive(ast: LiteralPrimitive, context: any): any { return null; }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitMethodCall(ast: MethodCall, context: any): any {\n    ast.receiver.visit(this);\n    return this.visitAll(ast.args, context);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPrefixNot(ast: PrefixNot, context: any): any {\n    ast.expression.visit(this);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPropertyRead(ast: PropertyRead, context: any): any {\n    ast.receiver.visit(this);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPropertyWrite(ast: PropertyWrite, context: any): any {\n    ast.receiver.visit(this);\n    ast.value.visit(this);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitSafePropertyRead(ast: SafePropertyRead, context: any): any {\n    ast.receiver.visit(this);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitSafeMethodCall(ast: SafeMethodCall, context: any): any {\n    ast.receiver.visit(this);\n    return this.visitAll(ast.args, context);\n  }\n/**\n * @param {?} asts\n * @param {?} context\n * @return {?}\n */\nvisitAll(asts: AST[], context: any): any {\n    asts.forEach(ast => ast.visit(this, context));\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitQuote(ast: Quote, context: any): any { return null; }\n}\nexport class AstTransformer implements AstVisitor {\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitImplicitReceiver(ast: ImplicitReceiver, context: any): AST { return ast; }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitInterpolation(ast: Interpolation, context: any): AST {\n    return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralPrimitive(ast: LiteralPrimitive, context: any): AST {\n    return new LiteralPrimitive(ast.span, ast.value);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPropertyRead(ast: PropertyRead, context: any): AST {\n    return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPropertyWrite(ast: PropertyWrite, context: any): AST {\n    return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitSafePropertyRead(ast: SafePropertyRead, context: any): AST {\n    return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitMethodCall(ast: MethodCall, context: any): AST {\n    return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitSafeMethodCall(ast: SafeMethodCall, context: any): AST {\n    return new SafeMethodCall(\n        ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitFunctionCall(ast: FunctionCall, context: any): AST {\n    return new FunctionCall(ast.span, ast.target.visit(this), this.visitAll(ast.args));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralArray(ast: LiteralArray, context: any): AST {\n    return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralMap(ast: LiteralMap, context: any): AST {\n    return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitBinary(ast: Binary, context: any): AST {\n    return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPrefixNot(ast: PrefixNot, context: any): AST {\n    return new PrefixNot(ast.span, ast.expression.visit(this));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitConditional(ast: Conditional, context: any): AST {\n    return new Conditional(\n        ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPipe(ast: BindingPipe, context: any): AST {\n    return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitKeyedRead(ast: KeyedRead, context: any): AST {\n    return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitKeyedWrite(ast: KeyedWrite, context: any): AST {\n    return new KeyedWrite(\n        ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n  }\n/**\n * @param {?} asts\n * @return {?}\n */\nvisitAll(asts: any[]): any[] {\n    const /** @type {?} */ res = new Array(asts.length);\n    for (let /** @type {?} */ i = 0; i < asts.length; ++i) {\n      res[i] = asts[i].visit(this);\n    }\n    return res;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitChain(ast: Chain, context: any): AST {\n    return new Chain(ast.span, this.visitAll(ast.expressions));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitQuote(ast: Quote, context: any): AST {\n    return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}